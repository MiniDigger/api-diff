{
  "packagesAdded": [
    "com.destroystokyo.paper.brigadier",
    "com.destroystokyo.paper.event.brigadier",
    "io.papermc.paper",
    "io.papermc.paper.brigadier",
    "io.papermc.paper.command.brigadier",
    "io.papermc.paper.command.brigadier.argument",
    "io.papermc.paper.command.brigadier.argument.predicate",
    "io.papermc.paper.command.brigadier.argument.range",
    "io.papermc.paper.command.brigadier.argument.resolvers",
    "io.papermc.paper.command.brigadier.argument.resolvers.selector"
  ],
  "packagesRemoved": [],
  "packagesChanged": [
    "com.destroystokyo.paper",
    "com.destroystokyo.paper.entity",
    "com.destroystokyo.paper.event.entity",
    "com.destroystokyo.paper.event.server",
    "io.papermc.paper.event.block",
    "io.papermc.paper.event.entity",
    "io.papermc.paper.plugin.lifecycle.event.types",
    "io.papermc.paper.registry",
    "io.papermc.paper.registry.keys",
    "io.papermc.paper.tag",
    "org.bukkit",
    "org.bukkit.block",
    "org.bukkit.block.banner",
    "org.bukkit.command",
    "org.bukkit.damage",
    "org.bukkit.enchantments",
    "org.bukkit.entity",
    "org.bukkit.event.block",
    "org.bukkit.event.entity",
    "org.bukkit.event.player",
    "org.bukkit.inventory",
    "org.bukkit.inventory.meta",
    "org.bukkit.inventory.meta.components",
    "org.bukkit.inventory.meta.trim",
    "org.bukkit.map",
    "org.bukkit.plugin",
    "org.bukkit.potion"
  ],
  "classesAdded": [
    "com.destroystokyo.paper.brigadier.BukkitBrigadierCommand",
    "com.destroystokyo.paper.brigadier.BukkitBrigadierCommandSource",
    "com.destroystokyo.paper.event.brigadier.AsyncPlayerSendCommandsEvent",
    "com.destroystokyo.paper.event.brigadier.AsyncPlayerSendSuggestionsEvent",
    "com.destroystokyo.paper.event.brigadier.CommandRegisteredEvent",
    "com.destroystokyo.paper.event.server.PaperServerListPingEvent.ListedPlayerInfo",
    "io.papermc.paper.ServerBuildInfo",
    "io.papermc.paper.ServerBuildInfo.StringRepresentation",
    "io.papermc.paper.brigadier.PaperBrigadier",
    "io.papermc.paper.command.brigadier.BasicCommand",
    "io.papermc.paper.command.brigadier.CommandSourceStack",
    "io.papermc.paper.command.brigadier.Commands",
    "io.papermc.paper.command.brigadier.MessageComponentSerializer",
    "io.papermc.paper.command.brigadier.argument.ArgumentTypes",
    "io.papermc.paper.command.brigadier.argument.CustomArgumentType",
    "io.papermc.paper.command.brigadier.argument.CustomArgumentType.Converted",
    "io.papermc.paper.command.brigadier.argument.RegistryArgumentExtractor",
    "io.papermc.paper.command.brigadier.argument.SignedMessageResolver",
    "io.papermc.paper.command.brigadier.argument.predicate.ItemStackPredicate",
    "io.papermc.paper.command.brigadier.argument.range.DoubleRangeProvider",
    "io.papermc.paper.command.brigadier.argument.range.IntegerRangeProvider",
    "io.papermc.paper.command.brigadier.argument.range.RangeProvider",
    "io.papermc.paper.command.brigadier.argument.resolvers.ArgumentResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.BlockPositionResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.PlayerProfileListResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.selector.EntitySelectorArgumentResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.selector.PlayerSelectorArgumentResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.selector.SelectorArgumentResolver",
    "io.papermc.paper.event.entity.EntityKnockbackEvent",
    "io.papermc.paper.event.entity.EntityKnockbackEvent.Cause",
    "io.papermc.paper.registry.RegistryAccess",
    "io.papermc.paper.registry.RegistryAccessHolder",
    "io.papermc.paper.registry.keys.DamageTypeKeys",
    "io.papermc.paper.registry.keys.EnchantmentKeys",
    "io.papermc.paper.registry.keys.InstrumentKeys",
    "io.papermc.paper.registry.keys.MobEffectKeys",
    "io.papermc.paper.registry.keys.WolfVariantKeys",
    "org.bukkit.inventory.meta.components.ToolComponent",
    "org.bukkit.inventory.meta.components.ToolComponent.ToolRule",
    "org.bukkit.potion.PotionData",
    "org.bukkit.potion.PotionEffectTypeCategory"
  ],
  "classesRemoved": [],
  "classesChanged": [
    "com.destroystokyo.paper.MaterialSetTag",
    "com.destroystokyo.paper.entity.Pathfinder.PathResult",
    "com.destroystokyo.paper.event.entity.EntityKnockbackByEntityEvent",
    "com.destroystokyo.paper.event.server.PaperServerListPingEvent",
    "io.papermc.paper.event.block.BlockLockCheckEvent",
    "io.papermc.paper.event.entity.EntityPushedByEntityAttackEvent",
    "io.papermc.paper.plugin.lifecycle.event.types.LifecycleEvents",
    "io.papermc.paper.registry.RegistryKey",
    "io.papermc.paper.registry.RegistryKeyImpl",
    "io.papermc.paper.registry.keys.GameEventKeys",
    "io.papermc.paper.tag.BaseTag",
    "org.bukkit.Chunk",
    "org.bukkit.GameMode",
    "org.bukkit.Material",
    "org.bukkit.Registry",
    "org.bukkit.Registry.SimpleRegistry",
    "org.bukkit.Sound",
    "org.bukkit.Tag",
    "org.bukkit.TreeType",
    "org.bukkit.UnsafeValues",
    "org.bukkit.World",
    "org.bukkit.block.Chest",
    "org.bukkit.block.EnderChest",
    "org.bukkit.block.banner.PatternType",
    "org.bukkit.command.SimpleCommandMap",
    "org.bukkit.damage.DamageType",
    "org.bukkit.enchantments.Enchantment",
    "org.bukkit.entity.AbstractArrow",
    "org.bukkit.entity.AreaEffectCloud",
    "org.bukkit.entity.Arrow",
    "org.bukkit.entity.Damageable",
    "org.bukkit.entity.ExperienceOrb",
    "org.bukkit.entity.Fireball",
    "org.bukkit.entity.FishHook",
    "org.bukkit.entity.LivingEntity",
    "org.bukkit.entity.Mob",
    "org.bukkit.entity.Player",
    "org.bukkit.event.block.BlockExplodeEvent",
    "org.bukkit.event.entity.EntityDamageByBlockEvent",
    "org.bukkit.event.entity.EntityDeathEvent",
    "org.bukkit.event.entity.PlayerDeathEvent",
    "org.bukkit.event.player.PlayerFishEvent.State",
    "org.bukkit.inventory.EquipmentSlot",
    "org.bukkit.inventory.EquipmentSlotGroup",
    "org.bukkit.inventory.ItemStack",
    "org.bukkit.inventory.RecipeChoice",
    "org.bukkit.inventory.RecipeChoice.ExactChoice",
    "org.bukkit.inventory.RecipeChoice.MaterialChoice",
    "org.bukkit.inventory.meta.ItemMeta",
    "org.bukkit.inventory.meta.LeatherArmorMeta",
    "org.bukkit.inventory.meta.PotionMeta",
    "org.bukkit.inventory.meta.trim.TrimPattern",
    "org.bukkit.map.MapCursor.Type",
    "org.bukkit.plugin.PluginDescriptionFile",
    "org.bukkit.potion.PotionEffectType"
  ],
  "membersAdded": [
    "getBukkitEntity()",
    "getBukkitLocation()",
    "getBukkitSender()",
    "getBukkitWorld()",
    "canReachFinalPoint()",
    "getCommandNode()",
    "hasFiredAsync",
    "hasFiredAsync()",
    "node",
    "getSuggestions()",
    "setSuggestions(com.mojang.brigadier.suggestion.@org.jetbrains.annotations.NotNull Suggestions)",
    "suggestions",
    "CommandRegisteredEvent(java.lang.String,com.destroystokyo.paper.brigadier.BukkitBrigadierCommand\u003cS\u003e,org.bukkit.command.Command,com.mojang.brigadier.tree.RootCommandNode\u003cS\u003e,com.mojang.brigadier.tree.LiteralCommandNode\u003cS\u003e,com.mojang.brigadier.tree.ArgumentCommandNode\u003cS,java.lang.String\u003e)",
    "brigadierCommand",
    "commandLabel",
    "defaultArgs",
    "getBrigadierCommand()",
    "getCommandLabel()",
    "getDefaultArgs()",
    "getLiteral()",
    "isRawCommand()",
    "literal",
    "rawCommand",
    "setLiteral(com.mojang.brigadier.tree.LiteralCommandNode\u003cS\u003e)",
    "setRawCommand(boolean)",
    "ListedPlayerInfo(java.lang.@org.jetbrains.annotations.NotNull String,java.util.@org.jetbrains.annotations.NotNull UUID)",
    "id()",
    "getListedPlayers()",
    "listedPlayers",
    "BRAND_PAPER_ID",
    "asString(io.papermc.paper.ServerBuildInfo.@org.jetbrains.annotations.NotNull StringRepresentation)",
    "brandId()",
    "brandName()",
    "buildInfo()",
    "buildNumber()",
    "buildTime()",
    "gitBranch()",
    "gitCommit()",
    "StringRepresentation()",
    "VERSION_FULL",
    "VERSION_SIMPLE",
    "isBrandCompatible(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "minecraftVersionId()",
    "minecraftVersionName()",
    "PaperBrigadier()",
    "componentFromMessage(com.mojang.brigadier.@org.checkerframework.checker.nullness.qual.NonNull Message)",
    "message(net.kyori.adventure.text.@org.checkerframework.checker.nullness.qual.NonNull ComponentLike)",
    "execute(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack,java.lang.@org.jetbrains.annotations.NotNull String[])",
    "suggest(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack,java.lang.@org.jetbrains.annotations.NotNull String[])",
    "\u003cT\u003eargument(java.lang.@org.jetbrains.annotations.NotNull String,com.mojang.brigadier.arguments.@org.jetbrains.annotations.NotNull ArgumentType\u003cT\u003e)",
    "getDispatcher()",
    "literal(java.lang.@org.jetbrains.annotations.NotNull String)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta,com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta,java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "\u003cT\u003eresource(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "\u003cT\u003eresourceKey(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "ArgumentTypes()",
    "blockPosition()",
    "blockState()",
    "doubleRange()",
    "entities()",
    "entity()",
    "entityAnchor()",
    "gameMode()",
    "heightMap()",
    "integerRange()",
    "itemPredicate()",
    "itemStack()",
    "namedColor()",
    "namespacedKey()",
    "objectiveCriteria()",
    "playerProfiles()",
    "players()",
    "scoreboardDisplaySlot()",
    "templateMirror()",
    "templateRotation()",
    "time()",
    "time(int)",
    "uuid()",
    "world()",
    "\u003cS\u003elistSuggestions(com.mojang.brigadier.context.@org.jetbrains.annotations.NotNull CommandContext\u003cS\u003e,com.mojang.brigadier.suggestion.@org.jetbrains.annotations.NotNull SuggestionsBuilder)",
    "getExamples()",
    "getNativeType()",
    "convert( N)",
    "parse(com.mojang.brigadier.@org.jetbrains.annotations.NotNull StringReader)",
    "\u003cT,S\u003egetTypedKey(com.mojang.brigadier.context.@org.checkerframework.checker.nullness.qual.NonNull CommandContext\u003cS\u003e,io.papermc.paper.registry.@org.checkerframework.checker.nullness.qual.NonNull RegistryKey\u003cT\u003e,java.lang.@org.checkerframework.checker.nullness.qual.NonNull String)",
    "RegistryArgumentExtractor()",
    "content()",
    "resolveSignedMessage(java.lang.@org.jetbrains.annotations.NotNull String,com.mojang.brigadier.context.@org.jetbrains.annotations.NotNull CommandContext\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "range()",
    "resolve(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack)",
    "PUSH",
    "setKnockback(org.bukkit.util.@org.checkerframework.checker.nullness.qual.NonNull Vector)",
    "setAcceleration(org.bukkit.util.@org.checkerframework.checker.nullness.qual.NonNull Vector)",
    "COMMANDS",
    "\u003cT\u003egetRegistry(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "registryAccess()",
    "RegistryAccessHolder()",
    "MAP_DECORATION_TYPE",
    "MOB_EFFECT",
    "PAINTING_VARIANT",
    "SOUND_EVENT",
    "\u003cT\u003ecreateInternal(java.lang.String)",
    "DamageTypeKeys()",
    "EnchantmentKeys()",
    "InstrumentKeys()",
    "MobEffectKeys()",
    "WolfVariantKeys()",
    "getPlayersSeeingChunk()",
    "getCompostChance()",
    "getDefaultAttributeModifiers()",
    "isCompostable()",
    "MEGA_PINE",
    "getPlayersSeeingChunk(int,int)",
    "getPlayersSeeingChunk(org.bukkit.@org.jetbrains.annotations.NotNull Chunk)",
    "isBlocked()",
    "getExperimentalDamageType(java.lang.@org.jetbrains.annotations.NotNull String)",
    "getAnvilCost()",
    "getBasePotionData()",
    "setBasePotionData(org.bukkit.potion.@org.jetbrains.annotations.Nullable PotionData)",
    "heal(double)",
    "heal(double,org.bukkit.event.entity.EntityRegainHealthEvent.RegainReason)",
    "getTimeUntilBite()",
    "resetFishingState()",
    "setTimeUntilBite(@org.jetbrains.annotations.Range(from\u003d1L, to\u003d2147483647L) int)",
    "canUseEquipmentSlot(org.bukkit.inventory.@org.jetbrains.annotations.NotNull EquipmentSlot)",
    "setLootTable(org.bukkit.loot.LootTable,long)",
    "getHAProxyAddress()",
    "BlockExplodeEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.block.@org.jetbrains.annotations.NotNull BlockState,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float)",
    "EntityDamageByBlockEvent(org.bukkit.block.@org.jetbrains.annotations.Nullable Block,org.bukkit.block.@org.jetbrains.annotations.Nullable BlockState,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.event.entity.EntityDamageEvent.@org.jetbrains.annotations.NotNull DamageCause,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,double)",
    "EntityDamageByBlockEvent(org.bukkit.block.@org.jetbrains.annotations.Nullable Block,org.bukkit.block.@org.jetbrains.annotations.Nullable BlockState,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.event.entity.EntityDamageEvent.@org.jetbrains.annotations.NotNull DamageCause,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull Map\u003corg.bukkit.event.entity.EntityDamageEvent.DamageModifier,java.lang.Double\u003e,java.util.@org.jetbrains.annotations.NotNull Map\u003corg.bukkit.event.entity.EntityDamageEvent.DamageModifier,? extends com.google.common.base.Function\u003c? super java.lang.Double,java.lang.Double\u003e\u003e)",
    "damagerState",
    "EntityDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e)",
    "EntityDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,int,int,java.lang.@org.jetbrains.annotations.Nullable String)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,int,int,java.lang.@org.jetbrains.annotations.Nullable String,boolean)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,java.lang.@org.jetbrains.annotations.Nullable String)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,java.lang.@org.jetbrains.annotations.Nullable String)",
    "LURED",
    "getOppositeHand()",
    "lore(java.util.List\u003c? extends net.kyori.adventure.text.Component\u003e)",
    "setLore(java.util.List\u003cjava.lang.String\u003e)",
    "validate(boolean)",
    "getAsComponentString()",
    "hasTool()",
    "setTool(org.bukkit.inventory.meta.components.@org.jetbrains.annotations.Nullable ToolComponent)",
    "isDyed()",
    "addRule(java.util.@org.jetbrains.annotations.NotNull Collection\u003corg.bukkit.Material\u003e,java.lang.@org.jetbrains.annotations.Nullable Float,java.lang.@org.jetbrains.annotations.Nullable Boolean)",
    "addRule(org.bukkit.@org.jetbrains.annotations.NotNull Material,java.lang.@org.jetbrains.annotations.Nullable Float,java.lang.@org.jetbrains.annotations.Nullable Boolean)",
    "addRule(org.bukkit.@org.jetbrains.annotations.NotNull Tag\u003corg.bukkit.Material\u003e,java.lang.@org.jetbrains.annotations.Nullable Float,java.lang.@org.jetbrains.annotations.Nullable Boolean)",
    "getDefaultMiningSpeed()",
    "getRules()",
    "getSpeed()",
    "isCorrectForDrops()",
    "setBlocks(java.util.@org.jetbrains.annotations.NotNull Collection\u003corg.bukkit.Material\u003e)",
    "setBlocks(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "setBlocks(org.bukkit.@org.jetbrains.annotations.NotNull Tag\u003corg.bukkit.Material\u003e)",
    "setCorrectForDrops(java.lang.@org.jetbrains.annotations.Nullable Boolean)",
    "setSpeed(java.lang.@org.jetbrains.annotations.Nullable Float)",
    "removeRule(org.bukkit.inventory.meta.components.ToolComponent.@org.jetbrains.annotations.NotNull ToolRule)",
    "setDamagePerBlock(int)",
    "setDefaultMiningSpeed(float)",
    "setRules(java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.meta.components.ToolComponent.ToolRule\u003e)",
    "UPPER_MAP_CURSOR_TYPE_BOUND",
    "paperPluginLoader",
    "PotionData(org.bukkit.potion.@org.jetbrains.annotations.NotNull PotionType)",
    "PotionData(org.bukkit.potion.@org.jetbrains.annotations.NotNull PotionType,boolean,boolean)",
    "extended",
    "isUpgraded()",
    "upgraded",
    "PotionEffectTypeCategory()"
  ],
  "membersRemoved": [
    "getName(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "acceleration",
    "getName( T)",
    "isBlock",
    "isBlock0()",
    "getInternalPotionData(org.bukkit.NamespacedKey)",
    "isCollidable(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "SimpleCommandMap(org.bukkit.@org.jetbrains.annotations.NotNull Server)",
    "explodedBlockState",
    "EntityDamageByBlockEvent(org.bukkit.block.@org.jetbrains.annotations.Nullable Block,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.event.entity.EntityDamageEvent.@org.jetbrains.annotations.NotNull DamageCause,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,double,org.bukkit.block.BlockState)",
    "EntityDamageByBlockEvent(org.bukkit.block.@org.jetbrains.annotations.Nullable Block,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.event.entity.EntityDamageEvent.@org.jetbrains.annotations.NotNull DamageCause,org.bukkit.damage.@org.jetbrains.annotations.NotNull DamageSource,java.util.@org.jetbrains.annotations.NotNull Map\u003corg.bukkit.event.entity.EntityDamageEvent.DamageModifier,java.lang.Double\u003e,java.util.@org.jetbrains.annotations.NotNull Map\u003corg.bukkit.event.entity.EntityDamageEvent.DamageModifier,? extends com.google.common.base.Function\u003c? super java.lang.Double,java.lang.Double\u003e\u003e,org.bukkit.block.BlockState)",
    "damagerBlockState",
    "EntityDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e)",
    "EntityDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,int,int,java.lang.@org.jetbrains.annotations.Nullable String)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,int,int,java.lang.@org.jetbrains.annotations.Nullable String,boolean)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,int,java.lang.@org.jetbrains.annotations.Nullable String)",
    "PlayerDeathEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e,int,java.lang.@org.jetbrains.annotations.Nullable String)"
  ],
  "membersChanged": [
    "BODY"
  ]
}