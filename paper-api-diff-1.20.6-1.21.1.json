{
  "packagesAdded": [
    "io.papermc.paper.persistence",
    "io.papermc.paper.registry.data",
    "io.papermc.paper.registry.event",
    "io.papermc.paper.registry.event.type",
    "io.papermc.paper.registry.keys.tags",
    "io.papermc.paper.registry.set",
    "io.papermc.paper.registry.tag",
    "io.papermc.paper.world.flag",
    "org.bukkit.inventory.view",
    "org.bukkit.spawner"
  ],
  "packagesRemoved": [
    "com.destroystokyo.paper.inventory",
    "io.papermc.paper.world.structure"
  ],
  "packagesChanged": [
    "com.destroystokyo.paper",
    "com.destroystokyo.paper.entity",
    "com.destroystokyo.paper.entity.ai",
    "com.destroystokyo.paper.entity.villager",
    "com.destroystokyo.paper.event.block",
    "com.destroystokyo.paper.event.brigadier",
    "com.destroystokyo.paper.event.entity",
    "com.destroystokyo.paper.event.executor",
    "com.destroystokyo.paper.event.executor.asm",
    "com.destroystokyo.paper.event.inventory",
    "com.destroystokyo.paper.event.player",
    "com.destroystokyo.paper.event.profile",
    "com.destroystokyo.paper.event.server",
    "com.destroystokyo.paper.loottable",
    "com.destroystokyo.paper.profile",
    "com.destroystokyo.paper.util",
    "com.destroystokyo.paper.utils",
    "io.papermc.paper",
    "io.papermc.paper.block",
    "io.papermc.paper.block.fluid",
    "io.papermc.paper.chat",
    "io.papermc.paper.command",
    "io.papermc.paper.command.brigadier",
    "io.papermc.paper.command.brigadier.argument",
    "io.papermc.paper.command.brigadier.argument.resolvers",
    "io.papermc.paper.datapack",
    "io.papermc.paper.entity",
    "io.papermc.paper.event.block",
    "io.papermc.paper.event.entity",
    "io.papermc.paper.event.player",
    "io.papermc.paper.event.world",
    "io.papermc.paper.event.world.border",
    "io.papermc.paper.math",
    "io.papermc.paper.plugin",
    "io.papermc.paper.plugin.bootstrap",
    "io.papermc.paper.plugin.configuration",
    "io.papermc.paper.plugin.lifecycle.event",
    "io.papermc.paper.plugin.lifecycle.event.handler",
    "io.papermc.paper.plugin.lifecycle.event.types",
    "io.papermc.paper.plugin.loader",
    "io.papermc.paper.plugin.loader.library",
    "io.papermc.paper.plugin.loader.library.impl",
    "io.papermc.paper.potion",
    "io.papermc.paper.registry",
    "io.papermc.paper.registry.keys",
    "io.papermc.paper.scoreboard.numbers",
    "io.papermc.paper.tag",
    "io.papermc.paper.text",
    "io.papermc.paper.util",
    "org.bukkit",
    "org.bukkit.attribute",
    "org.bukkit.block",
    "org.bukkit.block.banner",
    "org.bukkit.block.data.type",
    "org.bukkit.command",
    "org.bukkit.damage",
    "org.bukkit.enchantments",
    "org.bukkit.entity",
    "org.bukkit.event.block",
    "org.bukkit.event.command",
    "org.bukkit.event.enchantment",
    "org.bukkit.event.entity",
    "org.bukkit.event.inventory",
    "org.bukkit.event.player",
    "org.bukkit.event.weather",
    "org.bukkit.generator",
    "org.bukkit.generator.structure",
    "org.bukkit.inventory",
    "org.bukkit.inventory.meta",
    "org.bukkit.inventory.meta.components",
    "org.bukkit.inventory.meta.trim",
    "org.bukkit.loot",
    "org.bukkit.map",
    "org.bukkit.packs",
    "org.bukkit.persistence",
    "org.bukkit.plugin",
    "org.bukkit.plugin.messaging",
    "org.bukkit.potion",
    "org.bukkit.util"
  ],
  "classesAdded": [
    "com.destroystokyo.paper.Namespaced",
    "com.destroystokyo.paper.NamespacedTag",
    "io.papermc.paper.block.TileStateInventoryHolder",
    "io.papermc.paper.command.brigadier.argument.resolvers.FinePositionResolver",
    "io.papermc.paper.datapack.DatapackSource",
    "io.papermc.paper.entity.Leashable",
    "io.papermc.paper.event.player.PlayerInsertLecternBookEvent",
    "io.papermc.paper.persistence.PersistentDataContainerView",
    "io.papermc.paper.persistence.PersistentDataViewHolder",
    "io.papermc.paper.plugin.lifecycle.event.types.TagEventTypeProvider",
    "io.papermc.paper.registry.RegistryBuilder",
    "io.papermc.paper.registry.data.EnchantmentRegistryEntry",
    "io.papermc.paper.registry.data.EnchantmentRegistryEntry.Builder",
    "io.papermc.paper.registry.data.EnchantmentRegistryEntry.EnchantmentCost",
    "io.papermc.paper.registry.data.GameEventRegistryEntry",
    "io.papermc.paper.registry.data.GameEventRegistryEntry.Builder",
    "io.papermc.paper.registry.event.RegistryEntryAddEvent",
    "io.papermc.paper.registry.event.RegistryEvent",
    "io.papermc.paper.registry.event.RegistryEventProvider",
    "io.papermc.paper.registry.event.RegistryEvents",
    "io.papermc.paper.registry.event.RegistryFreezeEvent",
    "io.papermc.paper.registry.event.WritableRegistry",
    "io.papermc.paper.registry.event.type.RegistryEntryAddConfiguration",
    "io.papermc.paper.registry.event.type.RegistryEntryAddEventType",
    "io.papermc.paper.registry.keys.BannerPatternKeys",
    "io.papermc.paper.registry.keys.BlockTypeKeys",
    "io.papermc.paper.registry.keys.CatVariantKeys",
    "io.papermc.paper.registry.keys.FrogVariantKeys",
    "io.papermc.paper.registry.keys.ItemTypeKeys",
    "io.papermc.paper.registry.keys.JukeboxSongKeys",
    "io.papermc.paper.registry.keys.MapDecorationTypeKeys",
    "io.papermc.paper.registry.keys.MenuTypeKeys",
    "io.papermc.paper.registry.keys.VillagerProfessionKeys",
    "io.papermc.paper.registry.keys.VillagerTypeKeys",
    "io.papermc.paper.registry.keys.tags.EnchantmentTagKeys",
    "io.papermc.paper.registry.keys.tags.ItemTypeTagKeys",
    "io.papermc.paper.registry.set.RegistryKeySet",
    "io.papermc.paper.registry.set.RegistrySet",
    "io.papermc.paper.registry.set.RegistryValueSet",
    "io.papermc.paper.registry.tag.Tag",
    "io.papermc.paper.registry.tag.TagKey",
    "io.papermc.paper.tag.PostFlattenTagRegistrar",
    "io.papermc.paper.tag.PreFlattenTagRegistrar",
    "io.papermc.paper.tag.TagEntry",
    "io.papermc.paper.world.flag.FeatureDependant",
    "io.papermc.paper.world.flag.FeatureFlagSetHolder",
    "org.bukkit.ExplosionResult",
    "org.bukkit.JukeboxSong",
    "org.bukkit.ServerLinks",
    "org.bukkit.ServerLinks.ServerLink",
    "org.bukkit.ServerLinks.Type",
    "org.bukkit.block.data.type.Skull",
    "org.bukkit.block.data.type.WallSkull",
    "org.bukkit.entity.Shearable",
    "org.bukkit.event.block.BlockDispenseLootEvent",
    "org.bukkit.event.block.CrafterCraftEvent",
    "org.bukkit.event.block.VaultDisplayItemEvent",
    "org.bukkit.event.entity.TrialSpawnerSpawnEvent",
    "org.bukkit.event.player.PlayerLinksSendEvent",
    "org.bukkit.inventory.ItemType",
    "org.bukkit.inventory.ItemType.Typed",
    "org.bukkit.inventory.MenuType",
    "org.bukkit.inventory.MenuType.Typed",
    "org.bukkit.inventory.meta.ShieldMeta",
    "org.bukkit.inventory.meta.components.JukeboxPlayableComponent",
    "org.bukkit.inventory.view.AnvilView",
    "org.bukkit.inventory.view.BeaconView",
    "org.bukkit.inventory.view.BrewingStandView",
    "org.bukkit.inventory.view.CrafterView",
    "org.bukkit.inventory.view.EnchantmentView",
    "org.bukkit.inventory.view.FurnaceView",
    "org.bukkit.inventory.view.LecternView",
    "org.bukkit.inventory.view.LoomView",
    "org.bukkit.inventory.view.MerchantView",
    "org.bukkit.inventory.view.StonecutterView",
    "org.bukkit.spawner.BaseSpawner",
    "org.bukkit.spawner.Spawner",
    "org.bukkit.spawner.TrialSpawnerConfiguration",
    "org.bukkit.util.OldEnum"
  ],
  "classesRemoved": [
    "com.destroystokyo.paper.HeightmapType",
    "com.destroystokyo.paper.event.entity.EntityTransformedEvent",
    "com.destroystokyo.paper.event.entity.EntityTransformedEvent.TransformedReason",
    "com.destroystokyo.paper.event.executor.MethodHandleEventExecutor",
    "com.destroystokyo.paper.event.executor.StaticMethodHandleEventExecutor",
    "com.destroystokyo.paper.event.executor.asm.ASMEventExecutorGenerator",
    "com.destroystokyo.paper.event.executor.asm.ClassDefiner",
    "com.destroystokyo.paper.event.executor.asm.SafeClassDefiner",
    "com.destroystokyo.paper.event.executor.asm.SafeClassDefiner.GeneratedClassLoader",
    "com.destroystokyo.paper.event.player.PlayerInitialSpawnEvent",
    "com.destroystokyo.paper.event.player.PlayerLocaleChangeEvent",
    "com.destroystokyo.paper.inventory.ItemStackRecipeChoice",
    "com.destroystokyo.paper.util.SneakyThrow",
    "com.destroystokyo.paper.util.VersionFetcher.DummyVersionFetcher",
    "com.destroystokyo.paper.utils.CachedSizeConcurrentLinkedQueue",
    "io.papermc.paper.chat.ViewerUnawareImpl",
    "io.papermc.paper.chat.ViewerUnawareImpl.Default",
    "io.papermc.paper.event.world.StructureLocateEvent",
    "io.papermc.paper.potion.SuspiciousEffectEntryImpl",
    "io.papermc.paper.util.TransformingRandomAccessList",
    "io.papermc.paper.util.TransformingRandomAccessList.TransformedListIterator",
    "io.papermc.paper.world.structure.ConfiguredStructure"
  ],
  "classesChanged": [
    "com.destroystokyo.paper.ClientOption",
    "com.destroystokyo.paper.ParticleBuilder",
    "com.destroystokyo.paper.entity.Pathfinder",
    "com.destroystokyo.paper.entity.RangedEntity",
    "com.destroystokyo.paper.entity.ai.GoalKey",
    "com.destroystokyo.paper.entity.ai.MobGoals",
    "com.destroystokyo.paper.entity.ai.VanillaGoal",
    "com.destroystokyo.paper.entity.villager.Reputation",
    "com.destroystokyo.paper.event.block.AnvilDamagedEvent",
    "com.destroystokyo.paper.event.block.AnvilDamagedEvent.DamageState",
    "com.destroystokyo.paper.event.block.BeaconEffectEvent",
    "com.destroystokyo.paper.event.block.BlockDestroyEvent",
    "com.destroystokyo.paper.event.brigadier.AsyncPlayerSendCommandsEvent",
    "com.destroystokyo.paper.event.brigadier.AsyncPlayerSendSuggestionsEvent",
    "com.destroystokyo.paper.event.entity.ThrownEggHatchEvent",
    "com.destroystokyo.paper.event.entity.WitchConsumePotionEvent",
    "com.destroystokyo.paper.event.entity.WitchReadyPotionEvent",
    "com.destroystokyo.paper.event.entity.WitchThrowPotionEvent",
    "com.destroystokyo.paper.event.inventory.PrepareResultEvent",
    "com.destroystokyo.paper.event.player.PlayerArmorChangeEvent.SlotType",
    "com.destroystokyo.paper.event.player.PlayerClientOptionsChangeEvent",
    "com.destroystokyo.paper.event.player.PlayerHandshakeEvent",
    "com.destroystokyo.paper.event.player.PlayerJumpEvent",
    "com.destroystokyo.paper.event.player.PlayerReadyArrowEvent",
    "com.destroystokyo.paper.event.player.PlayerRecipeBookClickEvent",
    "com.destroystokyo.paper.event.player.PlayerSetSpawnEvent",
    "com.destroystokyo.paper.event.profile.PreFillProfileEvent",
    "com.destroystokyo.paper.event.profile.PreLookupProfileEvent",
    "com.destroystokyo.paper.event.profile.ProfileWhitelistVerifyEvent",
    "com.destroystokyo.paper.event.server.AsyncTabCompleteEvent",
    "com.destroystokyo.paper.event.server.AsyncTabCompleteEvent.Completion",
    "com.destroystokyo.paper.event.server.GS4QueryEvent",
    "com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.Builder",
    "com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.PluginInformation",
    "com.destroystokyo.paper.loottable.LootableInventory",
    "com.destroystokyo.paper.profile.PlayerProfile",
    "com.destroystokyo.paper.profile.ProfileProperty",
    "com.destroystokyo.paper.util.VersionFetcher",
    "com.destroystokyo.paper.utils.PaperPluginLogger",
    "io.papermc.paper.ServerBuildInfo",
    "io.papermc.paper.block.fluid.FluidData",
    "io.papermc.paper.chat.ChatRenderer",
    "io.papermc.paper.chat.ChatRenderer.ViewerUnaware",
    "io.papermc.paper.command.CommandBlockHolder",
    "io.papermc.paper.command.brigadier.BasicCommand",
    "io.papermc.paper.command.brigadier.Commands",
    "io.papermc.paper.command.brigadier.argument.ArgumentTypes",
    "io.papermc.paper.command.brigadier.argument.CustomArgumentType",
    "io.papermc.paper.command.brigadier.argument.CustomArgumentType.Converted",
    "io.papermc.paper.command.brigadier.argument.RegistryArgumentExtractor",
    "io.papermc.paper.command.brigadier.argument.SignedMessageResolver",
    "io.papermc.paper.command.brigadier.argument.resolvers.ArgumentResolver",
    "io.papermc.paper.datapack.Datapack",
    "io.papermc.paper.datapack.DatapackManager",
    "io.papermc.paper.entity.CollarColorable",
    "io.papermc.paper.entity.Frictional",
    "io.papermc.paper.entity.SchoolableFish",
    "io.papermc.paper.event.block.BlockLockCheckEvent",
    "io.papermc.paper.event.entity.EntityDyeEvent",
    "io.papermc.paper.event.entity.EntityKnockbackEvent",
    "io.papermc.paper.event.entity.EntityMoveEvent",
    "io.papermc.paper.event.entity.EntityPortalReadyEvent",
    "io.papermc.paper.event.entity.EntityPushedByEntityAttackEvent",
    "io.papermc.paper.event.entity.TameableDeathMessageEvent",
    "io.papermc.paper.event.entity.WaterBottleSplashEvent",
    "io.papermc.paper.event.player.AbstractChatEvent",
    "io.papermc.paper.event.player.AsyncChatDecorateEvent",
    "io.papermc.paper.event.player.PlayerBedFailEnterEvent",
    "io.papermc.paper.event.player.PlayerChangeBeaconEffectEvent",
    "io.papermc.paper.event.player.PlayerInventorySlotChangeEvent",
    "io.papermc.paper.event.player.PlayerItemFrameChangeEvent",
    "io.papermc.paper.event.player.PlayerLoomPatternSelectEvent",
    "io.papermc.paper.event.player.PlayerNameEntityEvent",
    "io.papermc.paper.event.player.PlayerPurchaseEvent",
    "io.papermc.paper.event.player.PlayerStonecutterRecipeSelectEvent",
    "io.papermc.paper.event.player.PlayerStopUsingItemEvent",
    "io.papermc.paper.event.world.StructuresLocateEvent",
    "io.papermc.paper.event.world.StructuresLocateEvent.Result",
    "io.papermc.paper.event.world.WorldGameRuleChangeEvent",
    "io.papermc.paper.event.world.border.WorldBorderCenterChangeEvent",
    "io.papermc.paper.math.BlockPosition",
    "io.papermc.paper.math.Position",
    "io.papermc.paper.plugin.PermissionManager",
    "io.papermc.paper.plugin.bootstrap.PluginBootstrap",
    "io.papermc.paper.plugin.lifecycle.event.LifecycleEventManager",
    "io.papermc.paper.plugin.lifecycle.event.handler.LifecycleEventHandler",
    "io.papermc.paper.plugin.lifecycle.event.types.LifecycleEventType",
    "io.papermc.paper.plugin.lifecycle.event.types.LifecycleEvents",
    "io.papermc.paper.plugin.loader.PluginClasspathBuilder",
    "io.papermc.paper.plugin.loader.PluginLoader",
    "io.papermc.paper.plugin.loader.library.ClassPathLibrary",
    "io.papermc.paper.plugin.loader.library.impl.JarLibrary",
    "io.papermc.paper.plugin.loader.library.impl.MavenLibraryResolver",
    "io.papermc.paper.potion.PotionMix",
    "io.papermc.paper.potion.SuspiciousEffectEntry",
    "io.papermc.paper.registry.RegistryAccess",
    "io.papermc.paper.registry.RegistryKey",
    "io.papermc.paper.registry.RegistryKeyImpl",
    "io.papermc.paper.registry.TypedKey",
    "io.papermc.paper.registry.TypedKeyImpl",
    "io.papermc.paper.registry.keys.BiomeKeys",
    "io.papermc.paper.registry.keys.DamageTypeKeys",
    "io.papermc.paper.registry.keys.EnchantmentKeys",
    "io.papermc.paper.registry.keys.GameEventKeys",
    "io.papermc.paper.registry.keys.InstrumentKeys",
    "io.papermc.paper.registry.keys.MobEffectKeys",
    "io.papermc.paper.registry.keys.StructureKeys",
    "io.papermc.paper.registry.keys.StructureTypeKeys",
    "io.papermc.paper.registry.keys.TrimMaterialKeys",
    "io.papermc.paper.registry.keys.TrimPatternKeys",
    "io.papermc.paper.registry.keys.WolfVariantKeys",
    "io.papermc.paper.scoreboard.numbers.FixedFormatImpl",
    "io.papermc.paper.scoreboard.numbers.NumberFormat",
    "io.papermc.paper.scoreboard.numbers.StyledFormatImpl",
    "io.papermc.paper.text.PaperComponents",
    "io.papermc.paper.util.Tick",
    "org.bukkit.Art",
    "org.bukkit.Bukkit",
    "org.bukkit.Effect",
    "org.bukkit.EntityEffect",
    "org.bukkit.FeatureFlag",
    "org.bukkit.GameEvent",
    "org.bukkit.Location",
    "org.bukkit.Material",
    "org.bukkit.OfflinePlayer",
    "org.bukkit.Particle",
    "org.bukkit.PortalType",
    "org.bukkit.Registry",
    "org.bukkit.Registry.SimpleRegistry",
    "org.bukkit.Server",
    "org.bukkit.Sound",
    "org.bukkit.Tag",
    "org.bukkit.UnsafeValues",
    "org.bukkit.World",
    "org.bukkit.WorldBorder",
    "org.bukkit.attribute.Attribute",
    "org.bukkit.attribute.AttributeInstance",
    "org.bukkit.attribute.AttributeModifier",
    "org.bukkit.block.BrewingStand",
    "org.bukkit.block.Container",
    "org.bukkit.block.CreatureSpawner",
    "org.bukkit.block.Lectern",
    "org.bukkit.block.Sign",
    "org.bukkit.block.TrialSpawner",
    "org.bukkit.block.banner.PatternType",
    "org.bukkit.block.data.type.DecoratedPot",
    "org.bukkit.command.RemoteConsoleCommandSender",
    "org.bukkit.damage.DamageType",
    "org.bukkit.enchantments.Enchantment",
    "org.bukkit.entity.AbstractArrow",
    "org.bukkit.entity.Cat.Type",
    "org.bukkit.entity.Creeper",
    "org.bukkit.entity.Entity",
    "org.bukkit.entity.EntityType",
    "org.bukkit.entity.Frog.Variant",
    "org.bukkit.entity.HumanEntity",
    "org.bukkit.entity.LivingEntity",
    "org.bukkit.entity.Player",
    "org.bukkit.entity.Sheep",
    "org.bukkit.entity.Villager.Profession",
    "org.bukkit.entity.Villager.Type",
    "org.bukkit.event.block.BlockExplodeEvent",
    "org.bukkit.event.block.BrewingStartEvent",
    "org.bukkit.event.command.UnknownCommandEvent",
    "org.bukkit.event.enchantment.PrepareItemEnchantEvent",
    "org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason",
    "org.bukkit.event.entity.EntityCombustByBlockEvent",
    "org.bukkit.event.entity.EntityCombustByEntityEvent",
    "org.bukkit.event.entity.EntityCombustEvent",
    "org.bukkit.event.entity.EntityDamageEvent.DamageCause",
    "org.bukkit.event.entity.EntityDamageEvent.DamageModifier",
    "org.bukkit.event.entity.EntityExplodeEvent",
    "org.bukkit.event.entity.EntityPortalEnterEvent",
    "org.bukkit.event.entity.EntityPortalEvent",
    "org.bukkit.event.inventory.InventoryType",
    "org.bukkit.event.inventory.PrepareAnvilEvent",
    "org.bukkit.event.inventory.TradeSelectEvent",
    "org.bukkit.event.player.PlayerItemMendEvent",
    "org.bukkit.event.weather.LightningStrikeEvent.Cause",
    "org.bukkit.generator.ChunkGenerator",
    "org.bukkit.generator.structure.Structure",
    "org.bukkit.generator.structure.StructureType",
    "org.bukkit.inventory.ArmoredHorseInventory",
    "org.bukkit.inventory.InventoryView",
    "org.bukkit.inventory.ItemFactory",
    "org.bukkit.inventory.ItemStack",
    "org.bukkit.inventory.SmithingRecipe",
    "org.bukkit.inventory.meta.CompassMeta",
    "org.bukkit.inventory.meta.Damageable",
    "org.bukkit.inventory.meta.FireworkMeta",
    "org.bukkit.inventory.meta.ItemMeta",
    "org.bukkit.inventory.meta.components.FoodComponent",
    "org.bukkit.inventory.meta.trim.TrimMaterial",
    "org.bukkit.inventory.meta.trim.TrimPattern",
    "org.bukkit.loot.LootTables",
    "org.bukkit.map.MapCursor.Type",
    "org.bukkit.persistence.PersistentDataContainer",
    "org.bukkit.plugin.Plugin",
    "org.bukkit.plugin.messaging.ChannelNameTooLongException",
    "org.bukkit.plugin.messaging.StandardMessenger",
    "org.bukkit.potion.PotionEffectType",
    "org.bukkit.potion.PotionType"
  ],
  "membersAdded": [
    "ClientOption(java.lang.Class\u003cT\u003e)",
    "NamespacedTag(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull String)",
    "NamespacedTag(org.bukkit.plugin.@org.jetbrains.annotations.NotNull Plugin,java.lang.@org.jetbrains.annotations.NotNull String)",
    "VALID_KEY",
    "VALID_NAMESPACE",
    "randomKey()",
    "\u003cT\u003edata(@org.jspecify.annotations.Nullable T)",
    "ParticleBuilder(org.bukkit.Particle)",
    "color(int,int,int,int)",
    "color(org.bukkit.@org.jspecify.annotations.Nullable Color)",
    "color(org.bukkit.@org.jspecify.annotations.Nullable Color,float)",
    "colorTransition(org.bukkit.Color,org.bukkit.Color)",
    "colorTransition(org.bukkit.Color,org.bukkit.Color,float)",
    "location(org.bukkit.Location)",
    "location(org.bukkit.World,double,double,double)",
    "particle(org.bukkit.Particle)",
    "receivers(java.util.@org.jspecify.annotations.Nullable Collection\u003corg.bukkit.entity.Player\u003e)",
    "receivers(java.util.@org.jspecify.annotations.Nullable List\u003corg.bukkit.entity.Player\u003e)",
    "receivers(org.bukkit.entity.Player@org.jspecify.annotations.Nullable...)",
    "source(org.bukkit.entity.@org.jspecify.annotations.Nullable Player)",
    "findPath(org.bukkit.Location)",
    "findPath(org.bukkit.entity.LivingEntity)",
    "moveTo(com.destroystokyo.paper.entity.Pathfinder.PathResult)",
    "moveTo(com.destroystokyo.paper.entity.Pathfinder.PathResult,double)",
    "moveTo(org.bukkit.Location)",
    "moveTo(org.bukkit.Location,double)",
    "moveTo(org.bukkit.entity.LivingEntity)",
    "moveTo(org.bukkit.entity.LivingEntity,double)",
    "rangedAttack(org.bukkit.entity.LivingEntity,float)",
    "\u003cA\u003eof(java.lang.Class\u003cA\u003e,org.bukkit.NamespacedKey)",
    "GoalKey(java.lang.Class\u003cT\u003e,org.bukkit.NamespacedKey)",
    "equals(java.lang.@org.jspecify.annotations.Nullable Object)",
    "\u003cT\u003eaddGoal(T,int,com.destroystokyo.paper.entity.ai.Goal\u003cT\u003e)",
    "\u003cT\u003egetAllGoals(T)",
    "\u003cT\u003egetAllGoals(T,com.destroystokyo.paper.entity.ai.GoalType)",
    "\u003cT\u003egetAllGoalsWithout(T,com.destroystokyo.paper.entity.ai.GoalType)",
    "\u003cT\u003egetGoal(T,com.destroystokyo.paper.entity.ai.GoalKey\u003cT\u003e)",
    "\u003cT\u003egetGoals(T,com.destroystokyo.paper.entity.ai.GoalKey\u003cT\u003e)",
    "\u003cT\u003egetRunningGoals(T)",
    "\u003cT\u003egetRunningGoals(T,com.destroystokyo.paper.entity.ai.GoalType)",
    "\u003cT\u003egetRunningGoalsWithout(T,com.destroystokyo.paper.entity.ai.GoalType)",
    "\u003cT\u003ehasGoal(T,com.destroystokyo.paper.entity.ai.GoalKey\u003cT\u003e)",
    "\u003cT\u003eremoveAllGoals(T)",
    "\u003cT\u003eremoveAllGoals(T,com.destroystokyo.paper.entity.ai.GoalType)",
    "\u003cT\u003eremoveGoal(T,com.destroystokyo.paper.entity.ai.Goal\u003cT\u003e)",
    "\u003cT\u003eremoveGoal(T,com.destroystokyo.paper.entity.ai.GoalKey\u003cT\u003e)",
    "\u003cT\u003ecreate(java.lang.@org.checkerframework.checker.nullness.qual.NonNull String,java.lang.@org.checkerframework.checker.nullness.qual.NonNull Class\u003cT\u003e)",
    "TAMABLE_ANIMAL_PANIC",
    "Reputation(java.util.Map\u003ccom.destroystokyo.paper.entity.villager.ReputationType,java.lang.Integer\u003e)",
    "getReputation(com.destroystokyo.paper.entity.villager.ReputationType)",
    "hasReputationSet(com.destroystokyo.paper.entity.villager.ReputationType)",
    "setReputation(com.destroystokyo.paper.entity.villager.ReputationType,int)",
    "DamageState(org.bukkit.Material)",
    "getState(org.bukkit.@org.jspecify.annotations.Nullable Material)",
    "getState(org.bukkit.block.data.@org.jspecify.annotations.Nullable BlockData)",
    "setDamageState(com.destroystokyo.paper.event.block.AnvilDamagedEvent.DamageState)",
    "setEffect(org.bukkit.potion.PotionEffect)",
    "setEffectBlock(org.bukkit.block.data.BlockData)",
    "setSuggestions(com.mojang.brigadier.suggestion.Suggestions)",
    "setHatchingType(org.bukkit.entity.EntityType)",
    "setPotion(org.bukkit.inventory.@org.jspecify.annotations.Nullable ItemStack)",
    "setResult(org.bukkit.inventory.@org.jspecify.annotations.Nullable ItemStack)",
    "getByMaterial(org.bukkit.Material)",
    "isEquipable(org.bukkit.Material)",
    "PlayerClientOptionsChangeEvent(org.bukkit.entity.Player,java.lang.String,int,com.destroystokyo.paper.ClientOption.ChatVisibility,boolean,com.destroystokyo.paper.SkinParts,org.bukkit.inventory.MainHand)",
    "failMessage(net.kyori.adventure.text.Component)",
    "setFailMessage(java.lang.String)",
    "setPropertiesJson(java.lang.String)",
    "setServerHostname(java.lang.String)",
    "setSocketAddressHostname(java.lang.String)",
    "setUniqueId(java.util.UUID)",
    "setFrom(org.bukkit.Location)",
    "PlayerReadyArrowEvent(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack)",
    "setRecipe(org.bukkit.NamespacedKey)",
    "setLocation(org.bukkit.@org.jspecify.annotations.Nullable Location)",
    "setNotification(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setProperties(java.util.Collection\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "addProfileProperties(java.util.Set\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "setProfileProperties(java.util.Set\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "setUUID(java.util.@org.jspecify.annotations.Nullable UUID)",
    "kickMessage(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setKickMessage(java.lang.@org.jspecify.annotations.Nullable String)",
    "completion(java.lang.String)",
    "completion(java.lang.String,net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "completions(java.util.List\u003ccom.destroystokyo.paper.event.server.AsyncTabCompleteEvent.Completion\u003e)",
    "fromStrings(java.util.List\u003cjava.lang.String\u003e)",
    "setCompletions(java.util.List\u003cjava.lang.String\u003e)",
    "gameVersion(java.lang.String)",
    "hostname(java.lang.String)",
    "map(java.lang.String)",
    "motd(java.lang.String)",
    "players(java.lang.String...)",
    "players(java.util.Collection\u003cjava.lang.String\u003e)",
    "plugins(com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.PluginInformation...)",
    "plugins(java.util.Collection\u003ccom.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.PluginInformation\u003e)",
    "serverVersion(java.lang.String)",
    "PluginInformation(java.lang.String,java.lang.String)",
    "of(java.lang.String,java.lang.String)",
    "setName(java.lang.String)",
    "setVersion(java.lang.String)",
    "setResponse(com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse)",
    "canPlayerLoot(java.util.UUID)",
    "getLastLooted(java.util.UUID)",
    "getLastLooted(org.bukkit.entity.Player)",
    "hasPlayerLooted(java.util.UUID)",
    "hasPlayerLooted(org.bukkit.entity.Player)",
    "setHasPlayerLooted(java.util.UUID,boolean)",
    "setHasPlayerLooted(org.bukkit.entity.Player,boolean)",
    "hasProperty(java.lang.@org.jspecify.annotations.Nullable String)",
    "removeProperties(java.util.Collection\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "removeProperty(com.destroystokyo.paper.profile.ProfileProperty)",
    "removeProperty(java.lang.@org.jspecify.annotations.Nullable String)",
    "setId(java.util.@org.jspecify.annotations.Nullable UUID)",
    "setName(java.lang.@org.jspecify.annotations.Nullable String)",
    "setProperty(com.destroystokyo.paper.profile.ProfileProperty)",
    "setTextures(org.bukkit.profile.@org.jspecify.annotations.Nullable PlayerTextures)",
    "ProfileProperty(java.lang.String,java.lang.String)",
    "ProfileProperty(java.lang.String,java.lang.String,java.lang.@org.jspecify.annotations.Nullable String)",
    "getVersionMessage(java.lang.String)",
    "PaperPluginLogger(io.papermc.paper.plugin.configuration.PluginMeta)",
    "getLogger(io.papermc.paper.plugin.configuration.PluginMeta)",
    "getLogger(org.bukkit.plugin.PluginDescriptionFile)",
    "setParent(java.util.logging.Logger)",
    "asString(io.papermc.paper.ServerBuildInfo.StringRepresentation)",
    "isBrandCompatible(net.kyori.adventure.key.Key)",
    "computeFlowDirection(org.bukkit.Location)",
    "computeHeight(org.bukkit.Location)",
    "render(org.bukkit.entity.Player,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component)",
    "render(org.bukkit.entity.Player,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component,net.kyori.adventure.audience.Audience)",
    "viewerUnaware(io.papermc.paper.chat.ChatRenderer.ViewerUnaware)",
    "lastOutput(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setCommand(java.lang.@org.jspecify.annotations.Nullable String)",
    "canUse(org.bukkit.command.CommandSender)",
    "execute(io.papermc.paper.command.brigadier.CommandSourceStack,java.lang.String[])",
    "permission()",
    "suggest(io.papermc.paper.command.brigadier.CommandSourceStack,java.lang.String[])",
    "\u003cT\u003eargument(java.lang.String,com.mojang.brigadier.arguments.ArgumentType\u003cT\u003e)",
    "literal(java.lang.String)",
    "register(com.mojang.brigadier.tree.LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "register(com.mojang.brigadier.tree.LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jspecify.annotations.Nullable String)",
    "register(com.mojang.brigadier.tree.LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jspecify.annotations.Nullable String,java.util.Collection\u003cjava.lang.String\u003e)",
    "register(com.mojang.brigadier.tree.LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.util.Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.PluginMeta,com.mojang.brigadier.tree.LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jspecify.annotations.Nullable String,java.util.Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.PluginMeta,java.lang.String,java.lang.@org.jspecify.annotations.Nullable String,java.util.Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.BasicCommand)",
    "register(java.lang.String,io.papermc.paper.command.brigadier.BasicCommand)",
    "register(java.lang.String,java.lang.@org.jspecify.annotations.Nullable String,io.papermc.paper.command.brigadier.BasicCommand)",
    "register(java.lang.String,java.lang.@org.jspecify.annotations.Nullable String,java.util.Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.BasicCommand)",
    "register(java.lang.String,java.util.Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.BasicCommand)",
    "\u003cT\u003eresource(io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "\u003cT\u003eresourceKey(io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "finePosition()",
    "finePosition(boolean)",
    "\u003cS\u003elistSuggestions(com.mojang.brigadier.context.CommandContext\u003cS\u003e,com.mojang.brigadier.suggestion.SuggestionsBuilder)",
    "convert(N)",
    "parse(com.mojang.brigadier.StringReader)",
    "\u003cT,S\u003egetTypedKey(com.mojang.brigadier.context.CommandContext\u003cS\u003e,io.papermc.paper.registry.RegistryKey\u003cT\u003e,java.lang.String)",
    "resolveSignedMessage(java.lang.String,com.mojang.brigadier.context.CommandContext\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "resolve(io.papermc.paper.command.brigadier.CommandSourceStack)",
    "computeDisplayName()",
    "getRequiredFeatures()",
    "getPack(java.lang.String)",
    "refreshPacks()",
    "create(java.lang.String)",
    "setCollarColor(org.bukkit.DyeColor)",
    "setFrictionState(net.kyori.adventure.util.TriState)",
    "setLeashHolder(org.bukkit.entity.@org.jspecify.annotations.Nullable Entity)",
    "startFollowing(io.papermc.paper.entity.SchoolableFish)",
    "denyWithMessageAndSound(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component,net.kyori.adventure.sound.@org.jspecify.annotations.Nullable Sound)",
    "setKeyItem(org.bukkit.inventory.ItemStack)",
    "setLockedMessage(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setLockedSound(net.kyori.adventure.sound.@org.jspecify.annotations.Nullable Sound)",
    "setResult(org.bukkit.event.Event.Result)",
    "setKnockback(org.bukkit.util.Vector)",
    "setTo(org.bukkit.Location)",
    "validateLocation(org.bukkit.Location)",
    "setTargetWorld(org.bukkit.@org.jspecify.annotations.Nullable World)",
    "setAcceleration(org.bukkit.util.Vector)",
    "deathMessage(net.kyori.adventure.text.Component)",
    "damageAsWaterSensitive(org.bukkit.entity.LivingEntity)",
    "doNotDamageAsWaterSensitive(org.bukkit.entity.LivingEntity)",
    "getIntensity(org.bukkit.entity.LivingEntity)",
    "setIntensity(org.bukkit.entity.LivingEntity,double)",
    "AbstractChatEvent(boolean,org.bukkit.entity.Player,java.util.Set\u003cnet.kyori.adventure.audience.Audience\u003e,io.papermc.paper.chat.ChatRenderer,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component,net.kyori.adventure.chat.SignedMessage)",
    "message(net.kyori.adventure.text.Component)",
    "renderer(io.papermc.paper.chat.ChatRenderer)",
    "result(net.kyori.adventure.text.Component)",
    "setMessage(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setPrimary(org.bukkit.potion.@org.jspecify.annotations.Nullable PotionEffectType)",
    "setSecondary(org.bukkit.potion.@org.jspecify.annotations.Nullable PotionEffectType)",
    "setBook(org.bukkit.inventory.ItemStack)",
    "PlayerInventorySlotChangeEvent(org.bukkit.entity.Player,int,org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack)",
    "setItemStack(org.bukkit.inventory.@org.jspecify.annotations.Nullable ItemStack)",
    "setPatternType(org.bukkit.block.banner.PatternType)",
    "setEntity(org.bukkit.entity.LivingEntity)",
    "setName(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setTrade(org.bukkit.inventory.MerchantRecipe)",
    "PlayerStonecutterRecipeSelectEvent(org.bukkit.entity.Player,org.bukkit.inventory.StonecutterInventory,org.bukkit.inventory.StonecuttingRecipe)",
    "setStonecuttingRecipe(org.bukkit.inventory.StonecuttingRecipe)",
    "PlayerStopUsingItemEvent(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack,int)",
    "Result(io.papermc.paper.math.Position,org.bukkit.generator.structure.Structure)",
    "setResult(io.papermc.paper.event.world.StructuresLocateEvent.@org.jspecify.annotations.Nullable Result)",
    "setStructures(java.util.List\u003corg.bukkit.generator.structure.Structure\u003e)",
    "setValue(java.lang.String)",
    "setNewCenter(org.bukkit.Location)",
    "offset(org.bukkit.Axis,int)",
    "offset(org.bukkit.block.BlockFace)",
    "offset(org.bukkit.block.BlockFace,int)",
    "block(org.bukkit.Location)",
    "fine(org.bukkit.Location)",
    "toLocation(org.bukkit.World)",
    "\u003cP,C\u003eget(org.bukkit.NamespacedKey,org.bukkit.persistence.PersistentDataType\u003cP,C\u003e)",
    "\u003cP,C\u003egetOrDefault(org.bukkit.NamespacedKey,org.bukkit.persistence.PersistentDataType\u003cP,C\u003e,C)",
    "\u003cP,C\u003ehas(org.bukkit.NamespacedKey,org.bukkit.persistence.PersistentDataType\u003cP,C\u003e)",
    "copyTo(org.bukkit.persistence.PersistentDataContainer,boolean)",
    "has(org.bukkit.NamespacedKey)",
    "addPermission(org.bukkit.permissions.Permission)",
    "addPermissions(java.util.List\u003corg.bukkit.permissions.Permission\u003e)",
    "getPermission(java.lang.String)",
    "getPermissionSubscriptions(java.lang.String)",
    "recalculatePermissionDefaults(org.bukkit.permissions.Permission)",
    "removePermission(java.lang.String)",
    "removePermission(org.bukkit.permissions.Permission)",
    "subscribeToDefaultPerms(boolean,org.bukkit.permissions.Permissible)",
    "subscribeToPermission(java.lang.String,org.bukkit.permissions.Permissible)",
    "unsubscribeFromDefaultPerms(boolean,org.bukkit.permissions.Permissible)",
    "unsubscribeFromPermission(java.lang.String,org.bukkit.permissions.Permissible)",
    "bootstrap(io.papermc.paper.plugin.bootstrap.BootstrapContext)",
    "createPlugin(io.papermc.paper.plugin.bootstrap.PluginProviderContext)",
    "\u003cE\u003eregisterEventHandler(io.papermc.paper.plugin.lifecycle.event.types.LifecycleEventType\u003c? super O,? extends E,?\u003e,io.papermc.paper.plugin.lifecycle.event.handler.LifecycleEventHandler\u003c? super E\u003e)",
    "registerEventHandler(io.papermc.paper.plugin.lifecycle.event.handler.configuration.LifecycleEventHandlerConfiguration\u003c? super O\u003e)",
    "run(E)",
    "newHandler(io.papermc.paper.plugin.lifecycle.event.handler.LifecycleEventHandler\u003c? super E\u003e)",
    "TAGS",
    "\u003cT\u003epostFlatten(io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "\u003cT\u003epreFlatten(io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "addLibrary(io.papermc.paper.plugin.loader.library.ClassPathLibrary)",
    "classloader(io.papermc.paper.plugin.loader.PluginClasspathBuilder)",
    "register(io.papermc.paper.plugin.loader.library.LibraryStore)",
    "JarLibrary(java.nio.file.Path)",
    "addDependency(org.eclipse.aether.graph.Dependency)",
    "addRepository(org.eclipse.aether.repository.RemoteRepository)",
    "PotionMix(org.bukkit.NamespacedKey,org.bukkit.inventory.ItemStack,org.bukkit.inventory.RecipeChoice,org.bukkit.inventory.RecipeChoice)",
    "createPredicateChoice(java.util.function.Predicate\u003c? super org.bukkit.inventory.ItemStack\u003e)",
    "create(org.bukkit.potion.PotionEffectType,int)",
    "\u003cT\u003egetRegistry(io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "\u003cT\u003egetRegistry(java.lang.Class\u003cT\u003e)",
    "JUKEBOX_SONG",
    "MENU",
    "RegistryKeyImpl(net.kyori.adventure.key.Key)",
    "\u003cT\u003ecreate(io.papermc.paper.registry.RegistryKey\u003cT\u003e,net.kyori.adventure.key.Key)",
    "TypedKeyImpl(net.kyori.adventure.key.Key,io.papermc.paper.registry.RegistryKey\u003cT\u003e)",
    "activeSlots()",
    "anvilCost()",
    "exclusiveWith()",
    "activeSlots(java.lang.Iterable\u003corg.bukkit.inventory.EquipmentSlotGroup\u003e)",
    "activeSlots(org.bukkit.inventory.EquipmentSlotGroup...)",
    "anvilCost(@org.jetbrains.annotations.Range(from\u003d0L, to\u003d2147483647L) int)",
    "description(net.kyori.adventure.text.Component)",
    "exclusiveWith(io.papermc.paper.registry.set.RegistryKeySet\u003corg.bukkit.enchantments.Enchantment\u003e)",
    "maxLevel(@org.jetbrains.annotations.Range(from\u003d1L, to\u003d255L) int)",
    "maximumCost(io.papermc.paper.registry.data.EnchantmentRegistryEntry.EnchantmentCost)",
    "minimumCost(io.papermc.paper.registry.data.EnchantmentRegistryEntry.EnchantmentCost)",
    "primaryItems(io.papermc.paper.registry.set.@org.jspecify.annotations.Nullable RegistryKeySet\u003corg.bukkit.inventory.ItemType\u003e)",
    "supportedItems(io.papermc.paper.registry.set.RegistryKeySet\u003corg.bukkit.inventory.ItemType\u003e)",
    "weight(@org.jetbrains.annotations.Range(from\u003d1L, to\u003d1024L) int)",
    "additionalPerLevelCost()",
    "baseCost()",
    "of(int,int)",
    "maxLevel()",
    "maximumCost()",
    "minimumCost()",
    "primaryItems()",
    "supportedItems()",
    "weight()",
    "range(@org.jetbrains.annotations.Range(from\u003d0L, to\u003d2147483647L) int)",
    "\u003cV\u003egetOrCreateTag(io.papermc.paper.registry.tag.TagKey\u003cV\u003e)",
    "entryAdd()",
    "freeze()",
    "RegistryEvents()",
    "register(io.papermc.paper.registry.TypedKey\u003cT\u003e,java.util.function.Consumer\u003c? super B\u003e)",
    "filter(io.papermc.paper.registry.TypedKey\u003cT\u003e)",
    "filter(java.util.function.Predicate\u003cio.papermc.paper.registry.TypedKey\u003cT\u003e\u003e)",
    "BannerPatternKeys()",
    "create(net.kyori.adventure.key.@org.checkerframework.checker.nullness.qual.NonNull Key)",
    "BlockTypeKeys()",
    "CatVariantKeys()",
    "FrogVariantKeys()",
    "ItemTypeKeys()",
    "MUSIC_DISC_CREATOR",
    "MUSIC_DISC_CREATOR_MUSIC_BOX",
    "MUSIC_DISC_PRECIPICE",
    "CHIRP",
    "CREATOR",
    "CREATOR_MUSIC_BOX",
    "ELEVEN",
    "FIVE",
    "JukeboxSongKeys()",
    "MALL",
    "MELLOHI",
    "OTHERSIDE",
    "PIGSTEP",
    "PRECIPICE",
    "RELIC",
    "STAL",
    "STRAD",
    "THIRTEEN",
    "WAIT",
    "MapDecorationTypeKeys()",
    "CRAFTER_3X3",
    "GENERIC_3X3",
    "GENERIC_9X1",
    "GENERIC_9X2",
    "GENERIC_9X3",
    "GENERIC_9X4",
    "GENERIC_9X5",
    "GENERIC_9X6",
    "MenuTypeKeys()",
    "VillagerProfessionKeys()",
    "VillagerTypeKeys()",
    "CURSE",
    "DOUBLE_TRADE_PRICE",
    "EXCLUSIVE_SET_ARMOR",
    "EXCLUSIVE_SET_BOOTS",
    "EXCLUSIVE_SET_BOW",
    "EXCLUSIVE_SET_CROSSBOW",
    "EXCLUSIVE_SET_DAMAGE",
    "EXCLUSIVE_SET_MINING",
    "EXCLUSIVE_SET_RIPTIDE",
    "EnchantmentTagKeys()",
    "IN_ENCHANTING_TABLE",
    "NON_TREASURE",
    "ON_MOB_SPAWN_EQUIPMENT",
    "ON_RANDOM_LOOT",
    "ON_TRADED_EQUIPMENT",
    "PREVENTS_BEE_SPAWNS_WHEN_MINING",
    "PREVENTS_DECORATED_POT_SHATTERING",
    "PREVENTS_ICE_MELTING",
    "PREVENTS_INFESTED_SPAWNS",
    "SMELTS_LOOT",
    "TOOLTIP_ORDER",
    "TRADEABLE",
    "TRADES_DESERT_COMMON",
    "TRADES_DESERT_SPECIAL",
    "TRADES_JUNGLE_COMMON",
    "TRADES_JUNGLE_SPECIAL",
    "TRADES_PLAINS_COMMON",
    "TRADES_PLAINS_SPECIAL",
    "TRADES_SAVANNA_COMMON",
    "TRADES_SAVANNA_SPECIAL",
    "TRADES_SNOW_COMMON",
    "TRADES_SNOW_SPECIAL",
    "TRADES_SWAMP_COMMON",
    "TRADES_SWAMP_SPECIAL",
    "TRADES_TAIGA_COMMON",
    "TRADES_TAIGA_SPECIAL",
    "TREASURE",
    "ARMADILLO_FOOD",
    "AXOLOTL_FOOD",
    "BEACON_PAYMENT_ITEMS",
    "BEE_FOOD",
    "BOATS",
    "BOOKSHELF_BOOKS",
    "BREAKS_DECORATED_POTS",
    "CAMEL_FOOD",
    "CAT_FOOD",
    "CHEST_ARMOR",
    "CHEST_BOATS",
    "CHICKEN_FOOD",
    "COMPASSES",
    "COW_FOOD",
    "CREEPER_DROP_MUSIC_DISCS",
    "CREEPER_IGNITERS",
    "DECORATED_POT_INGREDIENTS",
    "DECORATED_POT_SHERDS",
    "DYEABLE",
    "ENCHANTABLE_ARMOR",
    "ENCHANTABLE_BOW",
    "ENCHANTABLE_CHEST_ARMOR",
    "ENCHANTABLE_CROSSBOW",
    "ENCHANTABLE_DURABILITY",
    "ENCHANTABLE_EQUIPPABLE",
    "ENCHANTABLE_FIRE_ASPECT",
    "ENCHANTABLE_FISHING",
    "ENCHANTABLE_FOOT_ARMOR",
    "ENCHANTABLE_HEAD_ARMOR",
    "ENCHANTABLE_LEG_ARMOR",
    "ENCHANTABLE_MACE",
    "ENCHANTABLE_MINING",
    "ENCHANTABLE_MINING_LOOT",
    "ENCHANTABLE_SHARP_WEAPON",
    "ENCHANTABLE_SWORD",
    "ENCHANTABLE_TRIDENT",
    "ENCHANTABLE_VANISHING",
    "ENCHANTABLE_WEAPON",
    "FISHES",
    "FOOT_ARMOR",
    "FROG_FOOD",
    "GOAT_FOOD",
    "HANGING_SIGNS",
    "HEAD_ARMOR",
    "HOGLIN_FOOD",
    "HORSE_FOOD",
    "HORSE_TEMPT_ITEMS",
    "ItemTypeTagKeys()",
    "LECTERN_BOOKS",
    "LEG_ARMOR",
    "LLAMA_FOOD",
    "LLAMA_TEMPT_ITEMS",
    "MEAT",
    "NON_FLAMMABLE_WOOD",
    "NOTEBLOCK_TOP_INSTRUMENTS",
    "OCELOT_FOOD",
    "PANDA_FOOD",
    "PARROT_FOOD",
    "PARROT_POISONOUS_FOOD",
    "PIGLIN_LOVED",
    "PIG_FOOD",
    "RABBIT_FOOD",
    "SHEEP_FOOD",
    "SNIFFER_FOOD",
    "STONE_CRAFTING_MATERIALS",
    "STONE_TOOL_MATERIALS",
    "STRIDER_FOOD",
    "STRIDER_TEMPT_ITEMS",
    "TRIMMABLE_ARMOR",
    "TRIM_MATERIALS",
    "TRIM_TEMPLATES",
    "TURTLE_FOOD",
    "VILLAGER_PLANTABLE_SEEDS",
    "WOLF_FOOD",
    "contains(io.papermc.paper.registry.TypedKey\u003cT\u003e)",
    "resolve(org.bukkit.Registry\u003cT\u003e)",
    "\u003cT\u003ekeySet(io.papermc.paper.registry.RegistryKey\u003cT\u003e,io.papermc.paper.registry.TypedKey\u003cT\u003e...)",
    "\u003cT\u003ekeySet(io.papermc.paper.registry.RegistryKey\u003cT\u003e,java.lang.Iterable\u003cio.papermc.paper.registry.TypedKey\u003cT\u003e\u003e)",
    "\u003cT\u003ekeySetFromValues(io.papermc.paper.registry.RegistryKey\u003cT\u003e,java.lang.Iterable\u003c? extends T\u003e)",
    "tagKey()",
    "FixedFormatImpl(net.kyori.adventure.text.Component)",
    "fixed(net.kyori.adventure.text.ComponentLike)",
    "styled(net.kyori.adventure.text.format.Style)",
    "styled(net.kyori.adventure.text.format.StyleBuilderApplicable...)",
    "StyledFormatImpl(net.kyori.adventure.text.format.Style)",
    "styleApply(net.kyori.adventure.text.format.Style.Builder)",
    "addToTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e,java.util.Collection\u003cio.papermc.paper.registry.TypedKey\u003cT\u003e\u003e)",
    "getAllTags()",
    "getTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e)",
    "hasTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e)",
    "setTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e,java.util.Collection\u003cio.papermc.paper.registry.TypedKey\u003cT\u003e\u003e)",
    "addToTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e,java.util.Collection\u003cio.papermc.paper.tag.TagEntry\u003cT\u003e\u003e)",
    "setTag(io.papermc.paper.registry.tag.TagKey\u003cT\u003e,java.util.Collection\u003cio.papermc.paper.tag.TagEntry\u003cT\u003e\u003e)",
    "\u003cT\u003etagEntry(io.papermc.paper.registry.tag.TagKey\u003cT\u003e)",
    "\u003cT\u003etagEntry(io.papermc.paper.registry.tag.TagKey\u003cT\u003e,boolean)",
    "\u003cT\u003evalueEntry(io.papermc.paper.registry.TypedKey\u003cT\u003e)",
    "\u003cT\u003evalueEntry(io.papermc.paper.registry.TypedKey\u003cT\u003e,boolean)",
    "isTag()",
    "resolveWithContext(net.kyori.adventure.text.Component,org.bukkit.command.@org.jspecify.annotations.Nullable CommandSender,org.bukkit.entity.@org.jspecify.annotations.Nullable Entity)",
    "resolveWithContext(net.kyori.adventure.text.Component,org.bukkit.command.@org.jspecify.annotations.Nullable CommandSender,org.bukkit.entity.@org.jspecify.annotations.Nullable Entity,boolean)",
    "\u003cR\u003eaddTo(R,long)",
    "between(java.time.temporal.Temporal,java.time.temporal.Temporal)",
    "fromDuration(java.time.Duration)",
    "requiredFeatures()",
    "isEnabled(io.papermc.paper.world.flag.FeatureDependant)",
    "BACKYARD",
    "BAROQUE",
    "BOUQUET",
    "CAVEBIRD",
    "CHANGING",
    "COTAN",
    "ENDBOSS",
    "FINDING",
    "HUMBLE",
    "LOWMIST",
    "MEDITATIVE",
    "ORB",
    "OWLEMONS",
    "PASSAGE",
    "POND",
    "PRAIRIE_RIDE",
    "SUNFLOWERS",
    "TIDES",
    "UNPACKED",
    "getServerLinks()",
    "getWorld(net.kyori.adventure.key.Key)",
    "SOUND_WITH_CHARGE_SHOT",
    "ARMADILLO_PEEK",
    "BODY_BREAK",
    "TAMING_FAILED",
    "TAMING_SUCCEEDED",
    "DESTROY",
    "DESTROY_WITH_DECAY",
    "ExplosionResult()",
    "KEEP",
    "TRIGGER_BLOCK",
    "ALL_FLAGS",
    "deprecated(java.lang.String)",
    "getVibrationLevel()",
    "blockType",
    "get(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull TypedKey\u003cT\u003e)",
    "get(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "getOrThrow(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull TypedKey\u003cT\u003e)",
    "getOrThrow(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "getOrThrow(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "getTag(io.papermc.paper.registry.tag.@org.jetbrains.annotations.NotNull TagKey\u003cT\u003e)",
    "hasTag(io.papermc.paper.registry.tag.@org.jetbrains.annotations.NotNull TagKey\u003cT\u003e)",
    "addLink(java.lang.@org.jetbrains.annotations.NotNull String,java.net.@org.jetbrains.annotations.NotNull URI)",
    "addLink(net.kyori.adventure.text.Component,java.net.@org.jetbrains.annotations.NotNull URI)",
    "addLink(org.bukkit.ServerLinks.@org.jetbrains.annotations.NotNull Type,java.net.@org.jetbrains.annotations.NotNull URI)",
    "getLink(org.bukkit.ServerLinks.@org.jetbrains.annotations.NotNull Type)",
    "getLinks()",
    "ANNOUNCEMENTS",
    "COMMUNITY",
    "COMMUNITY_GUIDELINES",
    "FEEDBACK",
    "FORUMS",
    "NEWS",
    "REPORT_BUG",
    "STATUS",
    "SUPPORT",
    "WEBSITE",
    "removeLink(org.bukkit.ServerLinks.@org.jetbrains.annotations.NotNull ServerLink)",
    "setLink(org.bukkit.ServerLinks.@org.jetbrains.annotations.NotNull Type,java.net.@org.jetbrains.annotations.NotNull URI)",
    "BLOCK_TRIAL_SPAWNER_AMBIENT_OMINOUS",
    "BLOCK_TRIAL_SPAWNER_OMINOUS_ACTIVATE",
    "BLOCK_VAULT_REJECT_REWARDED_PLAYER",
    "MOB_INTERACTABLE_DOORS",
    "\u003cA,M\u003egetTag(io.papermc.paper.registry.tag.@org.jetbrains.annotations.NotNull TagKey\u003cA\u003e)",
    "createEmptyStack()",
    "deserializeItemFromJson(com.google.gson.JsonObject)",
    "serializeItemAsJson(org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack)",
    "createExplosion(org.bukkit.entity.@org.jetbrains.annotations.Nullable Entity,org.bukkit.@org.jetbrains.annotations.NotNull Location,float,boolean,boolean,boolean)",
    "getVoidDamageAmount()",
    "getVoidDamageMinBuildHeightOffset()",
    "isVoidDamageEnabled()",
    "setVoidDamageAmount(float)",
    "setVoidDamageEnabled(boolean)",
    "setVoidDamageMinBuildHeightOffset(double)",
    "GENERIC_BURNING_TIME",
    "GENERIC_EXPLOSION_KNOCKBACK_RESISTANCE",
    "GENERIC_MOVEMENT_EFFICIENCY",
    "GENERIC_OXYGEN_BONUS",
    "GENERIC_WATER_MOVEMENT_EFFICIENCY",
    "PLAYER_MINING_EFFICIENCY",
    "PLAYER_SNEAKING_SPEED",
    "PLAYER_SUBMERGED_MINING_SPEED",
    "PLAYER_SWEEPING_DAMAGE_RATIO",
    "getModifier(net.kyori.adventure.key.Key)",
    "removeModifier(net.kyori.adventure.key.Key)",
    "AttributeModifier(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,double,org.bukkit.attribute.AttributeModifier.@org.jetbrains.annotations.NotNull Operation)",
    "AttributeModifier(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,double,org.bukkit.attribute.AttributeModifier.@org.jetbrains.annotations.NotNull Operation,org.bukkit.inventory.@org.jetbrains.annotations.NotNull EquipmentSlotGroup)",
    "UUID_PATTERN",
    "getRecipeBrewTime()",
    "setRecipeBrewTime(@org.jetbrains.annotations.Range(from\u003d1L, to\u003d2147483647L) int)",
    "getAllowedEditorUniqueId()",
    "setAllowedEditorUniqueId(java.util.UUID)",
    "getCooldownLength()",
    "getNormalConfiguration()",
    "getOminousConfiguration()",
    "getTrackedEntities()",
    "isTrackingEntity(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity)",
    "isTrackingPlayer(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player)",
    "setCooldownLength(int)",
    "startTrackingEntity(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity)",
    "startTrackingPlayer(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player)",
    "stopTrackingEntity(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity)",
    "stopTrackingPlayer(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player)",
    "getType(java.lang.@org.jetbrains.annotations.NotNull String)",
    "valueOf(java.lang.@org.jetbrains.annotations.NotNull String)",
    "isCracked()",
    "setCracked(boolean)",
    "getActiveSlotGroups()",
    "getExclusiveWith()",
    "getPrimaryItems()",
    "getSupportedItems()",
    "getWeapon()",
    "setShooter(org.bukkit.projectiles.ProjectileSource,boolean)",
    "setWeapon(org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack)",
    "getIgniter()",
    "ignite(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity)",
    "broadcastHurtAnimation(java.util.Collection\u003corg.bukkit.entity.Player\u003e)",
    "startRiptideAttack(int,float,org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "setRiptiding(boolean)",
    "sendEntityEffect(org.bukkit.@org.jetbrains.annotations.NotNull EntityEffect,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity)",
    "sendLinks(org.bukkit.@org.jetbrains.annotations.NotNull ServerLinks)",
    "getProfession(java.lang.@org.jetbrains.annotations.NotNull String)",
    "BlockDispenseLootEvent(org.bukkit.entity.@org.jetbrains.annotations.Nullable Player,org.bukkit.block.@org.jetbrains.annotations.NotNull Block,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.inventory.ItemStack\u003e)",
    "dispensedLoot",
    "getDispensedLoot()",
    "setDispensedLoot(java.util.@org.jetbrains.annotations.Nullable List\u003corg.bukkit.inventory.ItemStack\u003e)",
    "BlockExplodeEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.block.@org.jetbrains.annotations.NotNull BlockState,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float,org.bukkit.@org.jetbrains.annotations.NotNull ExplosionResult)",
    "getExplosionResult()",
    "recipeBrewTime",
    "setBrewingTime(@org.jetbrains.annotations.Range(from\u003d0L, to\u003d2147483647L) int)",
    "VaultDisplayItemEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "displayItem",
    "setDisplayItem(org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "message(net.kyori.adventure.text.@org.jspecify.annotations.Nullable Component)",
    "setMessage(java.lang.@org.jspecify.annotations.Nullable String)",
    "PrepareItemEnchantEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.inventory.view.@org.jetbrains.annotations.NotNull EnchantmentView,org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.enchantments.@org.jetbrains.annotations.Nullable EnchantmentOffer @org.jetbrains.annotations.NotNull [],int)",
    "POTION_EFFECT",
    "EntityCombustByBlockEvent(org.bukkit.block.@org.jetbrains.annotations.Nullable Block,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,float)",
    "EntityCombustByEntityEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,float)",
    "EntityCombustEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,float)",
    "setDuration(float)",
    "EntityExplodeEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.@org.jetbrains.annotations.NotNull Location,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float,org.bukkit.@org.jetbrains.annotations.NotNull ExplosionResult)",
    "EntityPortalEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.@org.jetbrains.annotations.NotNull Location,org.bukkit.@org.jetbrains.annotations.Nullable Location,int,boolean,int)",
    "TrialSpawnerSpawnEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.block.@org.jetbrains.annotations.NotNull TrialSpawner)",
    "getTrialSpawner()",
    "InventoryType(int,java.lang.String,org.bukkit.inventory.@org.jetbrains.annotations.Nullable MenuType)",
    "InventoryType(int,java.lang.String,org.bukkit.inventory.@org.jetbrains.annotations.Nullable MenuType,boolean)",
    "getMenuType()",
    "menuType",
    "PrepareAnvilEvent(org.bukkit.inventory.view.@org.jetbrains.annotations.NotNull AnvilView,org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "TradeSelectEvent(org.bukkit.inventory.view.@org.jetbrains.annotations.NotNull MerchantView,int)",
    "consumedExperience",
    "PlayerLinksSendEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.@org.jetbrains.annotations.NotNull ServerLinks)",
    "links",
    "getStructure(java.lang.@org.jetbrains.annotations.NotNull String)",
    "getStructureType(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setArmor(org.bukkit.inventory.@org.jspecify.annotations.Nullable ItemStack)",
    "enchantWithLevels(org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,@org.jetbrains.annotations.Range(from\u003d1L, to\u003d30L) int,io.papermc.paper.registry.set.RegistryKeySet\u003corg.bukkit.enchantments.@org.jetbrains.annotations.NotNull Enchantment\u003e,java.util.Random)",
    "ARRAY_SERIALIZATION_VERSION",
    "craftDelegate",
    "deserializeItemsFromBytes(byte @org.jetbrains.annotations.NotNull [])",
    "enchantWithLevels(@org.jetbrains.annotations.Range(from\u003d1L, to\u003d30L) int,io.papermc.paper.registry.set.RegistryKeySet\u003corg.bukkit.enchantments.@org.jetbrains.annotations.NotNull Enchantment\u003e,java.util.Random)",
    "getMaxItemUseDuration(org.bukkit.entity.LivingEntity)",
    "of(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "of(org.bukkit.@org.jetbrains.annotations.NotNull Material,int)",
    "serializeItemsAsBytes(java.util.@org.jetbrains.annotations.NotNull Collection\u003corg.bukkit.inventory.ItemStack\u003e)",
    "serializeItemsAsBytes(org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack @org.jetbrains.annotations.NotNull [])",
    "\u003cM\u003egetItemType(java.lang.@org.jetbrains.annotations.NotNull String)",
    "\u003cM\u003etyped(java.lang.@org.jetbrains.annotations.NotNull Class\u003cM\u003e)",
    "asMaterial()",
    "createItemStack()",
    "createItemStack(int)",
    "getBlockType()",
    "getItemMetaClass()",
    "hasBlockType()",
    "createItemStack(int,java.util.function.@org.jetbrains.annotations.Nullable Consumer\u003c? super M\u003e)",
    "createItemStack(java.util.function.@org.jetbrains.annotations.Nullable Consumer\u003c? super M\u003e)",
    "typed()",
    "\u003cT\u003eget(java.lang.@org.jetbrains.annotations.NotNull String)",
    "\u003cV\u003etyped(java.lang.@org.jetbrains.annotations.NotNull Class\u003cV\u003e)",
    "create(org.bukkit.entity.@org.jetbrains.annotations.NotNull HumanEntity,net.kyori.adventure.text.Component)",
    "getInventoryViewClass()",
    "create(org.bukkit.entity.@org.jetbrains.annotations.NotNull HumanEntity,java.lang.@org.jetbrains.annotations.NotNull String)",
    "SmithingRecipe(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.Nullable RecipeChoice,org.bukkit.inventory.@org.jetbrains.annotations.Nullable RecipeChoice)",
    "SmithingRecipe(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.Nullable RecipeChoice,org.bukkit.inventory.@org.jetbrains.annotations.Nullable RecipeChoice,boolean)",
    "clearLodestone()",
    "isLodestoneCompass()",
    "hasDamageValue()",
    "resetDamage()",
    "hasPower()",
    "getCanDestroy()",
    "getCanPlaceOn()",
    "getDestroyableKeys()",
    "getJukeboxPlayable()",
    "getPlaceableKeys()",
    "hasDestroyableKeys()",
    "hasJukeboxPlayable()",
    "hasPlaceableKeys()",
    "setCanDestroy(java.util.Set\u003corg.bukkit.Material\u003e)",
    "setCanPlaceOn(java.util.Set\u003corg.bukkit.Material\u003e)",
    "setDestroyableKeys(java.util.@org.jetbrains.annotations.NotNull Collection\u003ccom.destroystokyo.paper.Namespaced\u003e)",
    "setJukeboxPlayable(org.bukkit.inventory.meta.components.@org.jetbrains.annotations.Nullable JukeboxPlayableComponent)",
    "setPlaceableKeys(java.util.@org.jetbrains.annotations.NotNull Collection\u003ccom.destroystokyo.paper.Namespaced\u003e)",
    "setBaseColor(org.bukkit.@org.jetbrains.annotations.Nullable DyeColor)",
    "getUsingConvertsTo()",
    "setUsingConvertsTo(org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "getSong()",
    "getSongKey()",
    "isShowInTooltip()",
    "setShowInTooltip(boolean)",
    "setSong(org.bukkit.@org.jetbrains.annotations.NotNull JukeboxSong)",
    "setSongKey(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "getTrimMaterial(java.lang.@org.jetbrains.annotations.NotNull String)",
    "getTrimPattern(java.lang.@org.jetbrains.annotations.NotNull String)",
    "bypassEnchantmentLevelRestriction(boolean)",
    "bypassesEnchantmentLevelRestriction()",
    "getRepairItemCountCost()",
    "setRepairItemCountCost(int)",
    "getBrewingTicks()",
    "setBrewingTicks(int)",
    "setOffers(org.bukkit.enchantments.@org.jetbrains.annotations.NotNull EnchantmentOffer[])",
    "setBurnTime(int,int)",
    "getSelectablePatterns()",
    "getSelectedPatternIndex()",
    "getRecipeAmount()",
    "getDataPath()",
    "ChannelNameTooLongException(int,java.lang.String)",
    "shortened(java.lang.String)",
    "setSpawnedEntity(org.bukkit.block.spawner.@org.jetbrains.annotations.NotNull SpawnerEntry)",
    "setSpawnedEntity(org.bukkit.entity.@org.jetbrains.annotations.Nullable EntitySnapshot)",
    "addPossibleReward(org.bukkit.loot.@org.jetbrains.annotations.NotNull LootTable,int)",
    "getAdditionalSimultaneousEntities()",
    "getAdditionalSpawnsBeforeCooldown()",
    "getBaseSimultaneousEntities()",
    "getBaseSpawnsBeforeCooldown()",
    "getPossibleRewards()",
    "removePossibleReward(org.bukkit.loot.@org.jetbrains.annotations.NotNull LootTable)",
    "setAdditionalSimultaneousEntities(float)",
    "setAdditionalSpawnsBeforeCooldown(float)",
    "setBaseSimultaneousEntities(float)",
    "setBaseSpawnsBeforeCooldown(float)",
    "setPossibleRewards(java.util.@org.jetbrains.annotations.NotNull Map\u003corg.bukkit.loot.LootTable,java.lang.Integer\u003e)",
    "compareTo( T)",
    "ordinal()"
  ],
  "membersRemoved": [
    "ClientOption(java.lang.@org.jetbrains.annotations.NotNull Class\u003cT\u003e)",
    "HeightmapType()",
    "LIGHT_BLOCKING",
    "SOLID_OR_LIQUID",
    "SOLID_OR_LIQUID_NO_LEAVES",
    "\u003cT\u003edata( T)",
    "ParticleBuilder(org.bukkit.@org.jetbrains.annotations.NotNull Particle)",
    "color(org.bukkit.@org.jetbrains.annotations.Nullable Color)",
    "color(org.bukkit.@org.jetbrains.annotations.Nullable Color,float)",
    "colorTransition(org.bukkit.@org.jetbrains.annotations.NotNull Color,org.bukkit.@org.jetbrains.annotations.NotNull Color)",
    "colorTransition(org.bukkit.@org.jetbrains.annotations.NotNull Color,org.bukkit.@org.jetbrains.annotations.NotNull Color,float)",
    "location(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "location(org.bukkit.@org.jetbrains.annotations.NotNull World,double,double,double)",
    "particle(org.bukkit.@org.jetbrains.annotations.NotNull Particle)",
    "receivers(java.util.@org.jetbrains.annotations.Nullable Collection\u003corg.bukkit.entity.Player\u003e)",
    "receivers(java.util.@org.jetbrains.annotations.Nullable List\u003corg.bukkit.entity.Player\u003e)",
    "receivers(org.bukkit.entity.@org.jetbrains.annotations.Nullable Player...)",
    "source(org.bukkit.entity.@org.jetbrains.annotations.Nullable Player)",
    "findPath(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "findPath(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity)",
    "moveTo(com.destroystokyo.paper.entity.Pathfinder.@org.jetbrains.annotations.NotNull PathResult)",
    "moveTo(com.destroystokyo.paper.entity.Pathfinder.@org.jetbrains.annotations.NotNull PathResult,double)",
    "moveTo(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "moveTo(org.bukkit.@org.jetbrains.annotations.NotNull Location,double)",
    "moveTo(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity)",
    "moveTo(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,double)",
    "rangedAttack(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity,float)",
    "\u003cA\u003eof(java.lang.@org.jetbrains.annotations.NotNull Class\u003cA\u003e,org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "GoalKey(java.lang.@org.jetbrains.annotations.NotNull Class\u003cT\u003e,org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "\u003cT\u003eaddGoal( T,int,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull Goal\u003cT\u003e)",
    "\u003cT\u003egetAllGoals( T)",
    "\u003cT\u003egetAllGoals( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalType)",
    "\u003cT\u003egetAllGoalsWithout( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalType)",
    "\u003cT\u003egetGoal( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalKey\u003cT\u003e)",
    "\u003cT\u003egetGoals( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalKey\u003cT\u003e)",
    "\u003cT\u003egetRunningGoals( T)",
    "\u003cT\u003egetRunningGoals( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalType)",
    "\u003cT\u003egetRunningGoalsWithout( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalType)",
    "\u003cT\u003ehasGoal( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalKey\u003cT\u003e)",
    "\u003cT\u003eremoveAllGoals( T)",
    "\u003cT\u003eremoveAllGoals( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalType)",
    "\u003cT\u003eremoveGoal( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull Goal\u003cT\u003e)",
    "\u003cT\u003eremoveGoal( T,com.destroystokyo.paper.entity.ai.@org.jetbrains.annotations.NotNull GoalKey\u003cT\u003e)",
    "\u003cT\u003ecreate(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull Class\u003cT\u003e)",
    "ANGER",
    "ANGER_OTHER",
    "ARROW_ATTACK",
    "AVOID_TARGET",
    "BLAZE_FIREBALL",
    "BOW_SHOOT",
    "BREATH",
    "CAT_SIT_ON_BED",
    "CROSSBOW_ATTACK",
    "DOLPHIN_PLAY_WITH_ITEMS",
    "DOOR_OPEN",
    "DROWNED_GOTO_BEACH",
    "DROWNED_GOTO_WATER",
    "EAT_CARROTS",
    "EAT_TILE",
    "ENDERMAN_PICKUP_BLOCK",
    "ENDERMAN_PLACE_BLOCK",
    "EVIL_RABBIT_ATTACK",
    "EVOKER_CAST_SPELL",
    "FISH_SCHOOL",
    "FOLLOW_ENTITY",
    "FOX_DEFEND_TRUSTED",
    "FOX_FACEPLANT",
    "FOX_PERCH_AND_SEARCH",
    "FOX_SEEK_SHELTER",
    "FOX_SLEEP",
    "FOX_STALK_PREY",
    "GHAST_ATTACK_TARGET",
    "GHAST_IDLE_MOVE",
    "GHAST_MOVE_TOWARDS_TARGET",
    "HORSE_TRAP",
    "HURT_BY_TARGET",
    "JUMP_ON_BLOCK",
    "KILLER_RABBIT_MELEE_ATTACK",
    "LEAP_AT_TARGET",
    "LLAMATRADER_DEFENDED_WANDERING_TRADER",
    "LLAMA_FOLLOW",
    "MOVE_TOWARDS_TARGET",
    "NEAREST_ATTACKABLE_TARGET",
    "NEAREST_ATTACKABLE_TARGET_WITCH",
    "NEAREST_VILLAGE",
    "OWNER_HURT_BY_TARGET",
    "OWNER_HURT_TARGET",
    "PANDA_HURT_BY_TARGET",
    "PERCH",
    "PLAYER_WHO_LOOKED_AT_TARGET",
    "POLARBEAR_ATTACK_PLAYERS",
    "POLARBEAR_HURT_BY",
    "POLARBEAR_MELEE",
    "POLARBEAR_PANIC",
    "POLAR_BEAR_PANIC",
    "RABBIT_AVOID_TARGET",
    "RAIDER_HOLD_GROUND",
    "RAIDER_OBTAIN_BANNER",
    "RANDOM_FLY",
    "RANDOM_LOOKAROUND",
    "RANDOM_STROLL_LAND",
    "RANDOM_SWIM",
    "RANDOM_TARGET_NON_TAMED",
    "RAVAGER_MELEE_ATTACK",
    "SHULKER_DEFENSE",
    "SHULKER_NEAREST",
    "SILVERFISH_HIDE_IN_BLOCK",
    "SILVERFISH_WAKE_OTHERS",
    "SIT",
    "SLIME_IDLE",
    "SLIME_NEAREST_PLAYER",
    "SLIME_RANDOM_JUMP",
    "SPELLCASTER_CAST_SPELL",
    "SPIDER_MELEE_ATTACK",
    "SPIDER_NEAREST_ATTACKABLE_TARGET",
    "STROLL_VILLAGE",
    "STROLL_VILLAGE_GOLEM",
    "TAME",
    "TEMPT_CHANCE",
    "TURTLE_GOTO_WATER",
    "TURTLE_TEMPT",
    "UNIVERSAL_ANGER_RESET",
    "VEX_COPY_TARGET_OF_OWNER",
    "VILLAGERTRADER_WANDER_TO_POSITION",
    "VINDICATOR_MELEE_ATTACK",
    "WATER_JUMP",
    "WOLF_PANIC",
    "Reputation(java.util.@org.jetbrains.annotations.NotNull Map\u003ccom.destroystokyo.paper.entity.villager.ReputationType,java.lang.Integer\u003e)",
    "getReputation(com.destroystokyo.paper.entity.villager.@org.jetbrains.annotations.NotNull ReputationType)",
    "hasReputationSet(com.destroystokyo.paper.entity.villager.@org.jetbrains.annotations.NotNull ReputationType)",
    "setReputation(com.destroystokyo.paper.entity.villager.@org.jetbrains.annotations.NotNull ReputationType,int)",
    "DamageState(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "getState(org.bukkit.@org.jetbrains.annotations.Nullable Material)",
    "getState(org.bukkit.block.data.@org.jetbrains.annotations.Nullable BlockData)",
    "setDamageState(com.destroystokyo.paper.event.block.AnvilDamagedEvent.@org.jetbrains.annotations.NotNull DamageState)",
    "setEffectBlock(org.bukkit.block.data.@org.jetbrains.annotations.NotNull BlockData)",
    "setSuggestions(com.mojang.brigadier.suggestion.@org.jetbrains.annotations.NotNull Suggestions)",
    "INFECTED",
    "TransformedReason()",
    "getTransformed()",
    "transformed",
    "setPotion(org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "MethodHandleEventExecutor(java.lang.@org.jetbrains.annotations.NotNull Class\u003c? extends org.bukkit.event.Event\u003e,java.lang.invoke.@org.jetbrains.annotations.NotNull MethodHandle)",
    "MethodHandleEventExecutor(java.lang.@org.jetbrains.annotations.NotNull Class\u003c? extends org.bukkit.event.Event\u003e,java.lang.reflect.@org.jetbrains.annotations.NotNull Method)",
    "handle",
    "method",
    "StaticMethodHandleEventExecutor(java.lang.@org.jetbrains.annotations.NotNull Class\u003c? extends org.bukkit.event.Event\u003e,java.lang.reflect.@org.jetbrains.annotations.NotNull Method)",
    "ASMEventExecutorGenerator()",
    "EXECUTE_DESCRIPTOR",
    "NEXT_ID",
    "generateEventExecutor(java.lang.reflect.@org.jetbrains.annotations.NotNull Method,java.lang.@org.jetbrains.annotations.NotNull String)",
    "generateName()",
    "defineClass(java.lang.@org.jetbrains.annotations.NotNull ClassLoader,java.lang.@org.jetbrains.annotations.NotNull String,@org.jetbrains.annotations.NotNull byte[])",
    "isBypassAccessChecks()",
    "SafeClassDefiner()",
    "GeneratedClassLoader(java.lang.@org.jetbrains.annotations.NotNull ClassLoader)",
    "define(java.lang.@org.jetbrains.annotations.NotNull String,byte[])",
    "getClassLoadingLock(java.lang.@org.jetbrains.annotations.NotNull String)",
    "hasClass(java.lang.@org.jetbrains.annotations.NotNull String)",
    "getByMaterial(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "isEquipable(org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "PlayerClientOptionsChangeEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.lang.@org.jetbrains.annotations.NotNull String,int,com.destroystokyo.paper.ClientOption.@org.jetbrains.annotations.NotNull ChatVisibility,boolean,com.destroystokyo.paper.@org.jetbrains.annotations.NotNull SkinParts,org.bukkit.inventory.@org.jetbrains.annotations.NotNull MainHand)",
    "failMessage(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component)",
    "setFailMessage(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setPropertiesJson(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setServerHostname(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setSocketAddressHostname(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setUniqueId(java.util.@org.jetbrains.annotations.NotNull UUID)",
    "getNewLocale()",
    "getOldLocale()",
    "newLocale",
    "oldLocale",
    "PlayerReadyArrowEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack)",
    "setRecipe(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "setLocation(org.bukkit.@org.jetbrains.annotations.Nullable Location)",
    "setNotification(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "setProperties(java.util.@org.jetbrains.annotations.NotNull Collection\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "addProfileProperties(java.util.@org.jetbrains.annotations.NotNull Set\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "setProfileProperties(java.util.@org.jetbrains.annotations.NotNull Set\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "setUUID(java.util.@org.jetbrains.annotations.Nullable UUID)",
    "kickMessage(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "completion(java.lang.@org.jetbrains.annotations.NotNull String)",
    "completion(java.lang.@org.jetbrains.annotations.NotNull String,net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "completions(java.util.@org.jetbrains.annotations.NotNull List\u003ccom.destroystokyo.paper.event.server.AsyncTabCompleteEvent.Completion\u003e)",
    "fromStrings(java.util.@org.jetbrains.annotations.NotNull List\u003cjava.lang.String\u003e)",
    "gameVersion(java.lang.@org.jetbrains.annotations.NotNull String)",
    "hostname(java.lang.@org.jetbrains.annotations.NotNull String)",
    "map(java.lang.@org.jetbrains.annotations.NotNull String)",
    "motd(java.lang.@org.jetbrains.annotations.NotNull String)",
    "players(java.lang.@org.jetbrains.annotations.NotNull String...)",
    "players(java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "plugins(com.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.@org.jetbrains.annotations.NotNull PluginInformation...)",
    "plugins(java.util.@org.jetbrains.annotations.NotNull Collection\u003ccom.destroystokyo.paper.event.server.GS4QueryEvent.QueryResponse.PluginInformation\u003e)",
    "serverVersion(java.lang.@org.jetbrains.annotations.NotNull String)",
    "PluginInformation(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull String)",
    "of(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull String)",
    "setResponse(com.destroystokyo.paper.event.server.GS4QueryEvent.@org.jetbrains.annotations.NotNull QueryResponse)",
    "ItemStackRecipeChoice(java.util.List\u003corg.bukkit.inventory.ItemStack\u003e)",
    "ItemStackRecipeChoice(org.bukkit.inventory.ItemStack)",
    "test(org.bukkit.inventory.ItemStack)",
    "canPlayerLoot(java.util.@org.jetbrains.annotations.NotNull UUID)",
    "getLastLooted(java.util.@org.jetbrains.annotations.NotNull UUID)",
    "getLastLooted(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player)",
    "hasPlayerLooted(java.util.@org.jetbrains.annotations.NotNull UUID)",
    "hasPlayerLooted(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player)",
    "setHasPlayerLooted(java.util.@org.jetbrains.annotations.NotNull UUID,boolean)",
    "setHasPlayerLooted(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,boolean)",
    "hasProperty(java.lang.@org.jetbrains.annotations.Nullable String)",
    "removeProperties(java.util.@org.jetbrains.annotations.NotNull Collection\u003ccom.destroystokyo.paper.profile.ProfileProperty\u003e)",
    "removeProperty(com.destroystokyo.paper.profile.@org.jetbrains.annotations.NotNull ProfileProperty)",
    "removeProperty(java.lang.@org.jetbrains.annotations.Nullable String)",
    "setId(java.util.@org.jetbrains.annotations.Nullable UUID)",
    "setProperty(com.destroystokyo.paper.profile.@org.jetbrains.annotations.NotNull ProfileProperty)",
    "ProfileProperty(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull String)",
    "ProfileProperty(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String)",
    "\u003cT\u003ethrowSneaky(java.lang.@org.jetbrains.annotations.NotNull Throwable)",
    "SneakyThrow()",
    "sneaky(java.lang.@org.jetbrains.annotations.NotNull Throwable)",
    "DummyVersionFetcher()",
    "getVersionMessage(java.lang.@org.jetbrains.annotations.NotNull String)",
    "CachedSizeConcurrentLinkedQueue()",
    "add( E)",
    "cachedSize",
    "poll()",
    "PaperPluginLogger(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta)",
    "getLogger(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta)",
    "getLogger(org.bukkit.plugin.@org.jetbrains.annotations.NotNull PluginDescriptionFile)",
    "setParent(java.util.logging.@org.jetbrains.annotations.NotNull Logger)",
    "asString(io.papermc.paper.ServerBuildInfo.@org.jetbrains.annotations.NotNull StringRepresentation)",
    "isBrandCompatible(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "computeFlowDirection(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "computeHeight(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "render(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component)",
    "render(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,net.kyori.adventure.audience.@org.jetbrains.annotations.NotNull Audience)",
    "viewerUnaware(io.papermc.paper.chat.ChatRenderer.@org.jetbrains.annotations.NotNull ViewerUnaware)",
    "ViewerUnawareImpl(io.papermc.paper.chat.ChatRenderer.ViewerUnaware)",
    "Default(io.papermc.paper.chat.ChatRenderer.ViewerUnaware)",
    "unaware",
    "lastOutput(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "execute(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack,java.lang.@org.jetbrains.annotations.NotNull String[])",
    "suggest(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack,java.lang.@org.jetbrains.annotations.NotNull String[])",
    "\u003cT\u003eargument(java.lang.@org.jetbrains.annotations.NotNull String,com.mojang.brigadier.arguments.@org.jetbrains.annotations.NotNull ArgumentType\u003cT\u003e)",
    "literal(java.lang.@org.jetbrains.annotations.NotNull String)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta,com.mojang.brigadier.tree.@org.jetbrains.annotations.NotNull LiteralCommandNode\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e)",
    "register(io.papermc.paper.plugin.configuration.@org.jetbrains.annotations.NotNull PluginMeta,java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.lang.@org.jetbrains.annotations.Nullable String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "register(java.lang.@org.jetbrains.annotations.NotNull String,java.util.@org.jetbrains.annotations.NotNull Collection\u003cjava.lang.String\u003e,io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull BasicCommand)",
    "\u003cT\u003eresource(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "\u003cT\u003eresourceKey(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "\u003cS\u003elistSuggestions(com.mojang.brigadier.context.@org.jetbrains.annotations.NotNull CommandContext\u003cS\u003e,com.mojang.brigadier.suggestion.@org.jetbrains.annotations.NotNull SuggestionsBuilder)",
    "convert( N)",
    "parse(com.mojang.brigadier.@org.jetbrains.annotations.NotNull StringReader)",
    "\u003cT,S\u003egetTypedKey(com.mojang.brigadier.context.@org.checkerframework.checker.nullness.qual.NonNull CommandContext\u003cS\u003e,io.papermc.paper.registry.@org.checkerframework.checker.nullness.qual.NonNull RegistryKey\u003cT\u003e,java.lang.@org.checkerframework.checker.nullness.qual.NonNull String)",
    "resolveSignedMessage(java.lang.@org.jetbrains.annotations.NotNull String,com.mojang.brigadier.context.@org.jetbrains.annotations.NotNull CommandContext\u003cio.papermc.paper.command.brigadier.CommandSourceStack\u003e)",
    "resolve(io.papermc.paper.command.brigadier.@org.jetbrains.annotations.NotNull CommandSourceStack)",
    "setFrictionState(net.kyori.adventure.util.@org.jetbrains.annotations.NotNull TriState)",
    "startFollowing(io.papermc.paper.entity.@org.jetbrains.annotations.NotNull SchoolableFish)",
    "denyWithMessageAndSound(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component,net.kyori.adventure.sound.@org.jetbrains.annotations.Nullable Sound)",
    "setKeyItem(org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack)",
    "setLockedMessage(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "setLockedSound(net.kyori.adventure.sound.@org.jetbrains.annotations.Nullable Sound)",
    "setKnockback(org.bukkit.util.@org.checkerframework.checker.nullness.qual.NonNull Vector)",
    "setTargetWorld(org.bukkit.@org.jetbrains.annotations.Nullable World)",
    "setAcceleration(org.bukkit.util.@org.checkerframework.checker.nullness.qual.NonNull Vector)",
    "deathMessage(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component)",
    "damageAsWaterSensitive(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity)",
    "doNotDamageAsWaterSensitive(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity)",
    "AbstractChatEvent(boolean,org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,java.util.@org.jetbrains.annotations.NotNull Set\u003cnet.kyori.adventure.audience.Audience\u003e,io.papermc.paper.chat.@org.jetbrains.annotations.NotNull ChatRenderer,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,net.kyori.adventure.chat.@org.jetbrains.annotations.NotNull SignedMessage)",
    "renderer(io.papermc.paper.chat.@org.jetbrains.annotations.NotNull ChatRenderer)",
    "isPreview()",
    "result(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component)",
    "setMessage(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "setPrimary(org.bukkit.potion.@org.jetbrains.annotations.Nullable PotionEffectType)",
    "setSecondary(org.bukkit.potion.@org.jetbrains.annotations.Nullable PotionEffectType)",
    "PlayerInventorySlotChangeEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,int,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack)",
    "setPatternType(org.bukkit.block.banner.@org.jetbrains.annotations.NotNull PatternType)",
    "setEntity(org.bukkit.entity.@org.jetbrains.annotations.NotNull LivingEntity)",
    "setName(net.kyori.adventure.text.@org.jetbrains.annotations.Nullable Component)",
    "setTrade(org.bukkit.inventory.@org.jetbrains.annotations.NotNull MerchantRecipe)",
    "PlayerStonecutterRecipeSelectEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.inventory.@org.jetbrains.annotations.NotNull StonecutterInventory,org.bukkit.inventory.@org.jetbrains.annotations.NotNull StonecuttingRecipe)",
    "setStonecuttingRecipe(org.bukkit.inventory.@org.jetbrains.annotations.NotNull StonecuttingRecipe)",
    "PlayerStopUsingItemEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,int)",
    "setResult(org.bukkit.@org.jetbrains.annotations.Nullable Location)",
    "setType(org.bukkit.@org.jetbrains.annotations.NotNull StructureType)",
    "getConfiguredStructures()",
    "Result(io.papermc.paper.math.@org.jetbrains.annotations.NotNull Position,org.bukkit.generator.structure.@org.jetbrains.annotations.NotNull Structure)",
    "Result(org.bukkit.@org.jetbrains.annotations.NotNull Location,io.papermc.paper.world.structure.@org.jetbrains.annotations.NotNull ConfiguredStructure)",
    "configuredStructure()",
    "legacy$structures",
    "setConfiguredStructures(java.util.@org.jetbrains.annotations.NotNull List\u003cio.papermc.paper.world.structure.ConfiguredStructure\u003e)",
    "setResult(io.papermc.paper.event.world.StructuresLocateEvent.@org.jetbrains.annotations.Nullable Result)",
    "setStructures(java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.generator.structure.Structure\u003e)",
    "setValue(java.lang.@org.jetbrains.annotations.NotNull String)",
    "setNewCenter(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "offset(org.bukkit.@org.jetbrains.annotations.NotNull Axis,int)",
    "offset(org.bukkit.block.@org.jetbrains.annotations.NotNull BlockFace)",
    "offset(org.bukkit.block.@org.jetbrains.annotations.NotNull BlockFace,int)",
    "block(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "fine(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "bootstrap(io.papermc.paper.plugin.bootstrap.@org.jetbrains.annotations.NotNull BootstrapContext)",
    "createPlugin(io.papermc.paper.plugin.bootstrap.@org.jetbrains.annotations.NotNull PluginProviderContext)",
    "\u003cE\u003eregisterEventHandler(io.papermc.paper.plugin.lifecycle.event.types.@org.jetbrains.annotations.NotNull LifecycleEventType\u003c? super O,? extends E,?\u003e,io.papermc.paper.plugin.lifecycle.event.handler.@org.jetbrains.annotations.NotNull LifecycleEventHandler\u003c? super E\u003e)",
    "registerEventHandler(io.papermc.paper.plugin.lifecycle.event.handler.configuration.@org.jetbrains.annotations.NotNull LifecycleEventHandlerConfiguration\u003c? super O\u003e)",
    "run( E)",
    "newHandler(io.papermc.paper.plugin.lifecycle.event.handler.@org.jetbrains.annotations.NotNull LifecycleEventHandler\u003c? super E\u003e)",
    "addLibrary(io.papermc.paper.plugin.loader.library.@org.jetbrains.annotations.NotNull ClassPathLibrary)",
    "classloader(io.papermc.paper.plugin.loader.@org.jetbrains.annotations.NotNull PluginClasspathBuilder)",
    "register(io.papermc.paper.plugin.loader.library.@org.jetbrains.annotations.NotNull LibraryStore)",
    "JarLibrary(java.nio.file.@org.jetbrains.annotations.NotNull Path)",
    "addDependency(org.eclipse.aether.graph.@org.jetbrains.annotations.NotNull Dependency)",
    "addRepository(org.eclipse.aether.repository.@org.jetbrains.annotations.NotNull RemoteRepository)",
    "PotionMix(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice)",
    "createPredicateChoice(java.util.function.@org.jetbrains.annotations.NotNull Predicate\u003c? super org.bukkit.inventory.ItemStack\u003e)",
    "create(org.bukkit.potion.@org.jetbrains.annotations.NotNull PotionEffectType,int)",
    "SuspiciousEffectEntryImpl(org.bukkit.potion.@org.jetbrains.annotations.NotNull PotionEffectType,int)",
    "\u003cT\u003egetRegistry(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "RegistryKeyImpl(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "\u003cT\u003ecreate(io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e,net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "TypedKeyImpl(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key,io.papermc.paper.registry.@org.jetbrains.annotations.NotNull RegistryKey\u003cT\u003e)",
    "create(net.kyori.adventure.key.@org.jetbrains.annotations.NotNull Key)",
    "FixedFormatImpl(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component)",
    "fixed(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull ComponentLike)",
    "styled(net.kyori.adventure.text.format.@org.jetbrains.annotations.NotNull Style)",
    "styled(net.kyori.adventure.text.format.@org.jetbrains.annotations.NotNull StyleBuilderApplicable@org.jetbrains.annotations.NotNull...)",
    "StyledFormatImpl(net.kyori.adventure.text.format.@org.jetbrains.annotations.NotNull Style)",
    "styleApply(net.kyori.adventure.text.format.Style.@org.jetbrains.annotations.NotNull Builder)",
    "resolveWithContext(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,org.bukkit.command.@org.jetbrains.annotations.Nullable CommandSender,org.bukkit.entity.@org.jetbrains.annotations.Nullable Entity)",
    "resolveWithContext(net.kyori.adventure.text.@org.jetbrains.annotations.NotNull Component,org.bukkit.command.@org.jetbrains.annotations.Nullable CommandSender,org.bukkit.entity.@org.jetbrains.annotations.Nullable Entity,boolean)",
    "\u003cR\u003eaddTo( R,long)",
    "between(java.time.temporal.@org.jetbrains.annotations.NotNull Temporal,java.time.temporal.@org.jetbrains.annotations.NotNull Temporal)",
    "fromDuration(java.time.@org.jetbrains.annotations.NotNull Duration)",
    "TransformingRandomAccessList(java.util.@org.checkerframework.checker.nullness.qual.NonNull List\u003cF\u003e,java.util.function.@org.checkerframework.checker.nullness.qual.NonNull Function\u003c? super F,? extends T\u003e,java.util.function.@org.checkerframework.checker.nullness.qual.NonNull Function\u003c? super T,? extends F\u003e)",
    "add(int,T)",
    "fromFunction",
    "fromList",
    "get(int)",
    "\u003cA\u003ecast(java.util.Iterator\u003cA\u003e)",
    "TransformedListIterator(java.util.ListIterator\u003cF\u003e)",
    "add(T)",
    "backingIterator",
    "backingIterator()",
    "hasPrevious()",
    "nextIndex()",
    "previous()",
    "previousIndex()",
    "set(T)",
    "transform(F)",
    "transformBack(T)",
    "listIterator(int)",
    "remove(int)",
    "removeIf(java.util.function.Predicate\u003c? super T\u003e)",
    "set(int,T)",
    "toFunction",
    "ConfiguredStructure(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.@org.jetbrains.annotations.NotNull StructureType)",
    "RUINED_PORTAL_STANDARD",
    "structureType",
    "createVanillaChunkData(org.bukkit.@org.jetbrains.annotations.NotNull World,int,int)",
    "BOOK_PAGE_TURNED",
    "COMPOSTER_COMPOSTS",
    "ENDER_DRAGON_DESTROYS_BLOCK",
    "ENDER_EYE_PLACED",
    "GRINDSTONE_USED",
    "HUSK_CONVERTS_TO_ZOMBIE",
    "LAVA_CONVERTS_BLOCK",
    "PHANTOM_BITES",
    "REDSTONE_TORCH_BURNS_OUT",
    "WET_SPONGE_VAPORIZES_IN_NETHER",
    "ZOMBIE_CONVERTS_TO_DROWNED",
    "toHighestLocation(com.destroystokyo.paper.HeightmapType)",
    "CONFIGURED_STRUCTURE",
    "BLOCK_TRIAL_SPAWNER_AMBIENT_CHARGED",
    "BLOCK_TRIAL_SPAWNER_CHARGE_ACTIVATE",
    "ITEMS_MUSIC_DISCS",
    "getFeatureFlag(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "doesBedWork()",
    "doesRespawnAnchorWork()",
    "getHighestBlockAt(int,int,com.destroystokyo.paper.HeightmapType)",
    "getHighestBlockAt(org.bukkit.@org.jetbrains.annotations.NotNull Location,com.destroystokyo.paper.HeightmapType)",
    "getHighestBlockYAt(int,int,com.destroystokyo.paper.HeightmapType)",
    "getHighestBlockYAt(org.bukkit.@org.jetbrains.annotations.NotNull Location,com.destroystokyo.paper.HeightmapType)",
    "hasBedrockCeiling()",
    "hasSkylight()",
    "isUltrawarm()",
    "isInBounds(org.bukkit.@org.jetbrains.annotations.NotNull Location)",
    "PatternType(java.lang.String,java.lang.String)",
    "byString",
    "identifier",
    "getExperimentalDamageType(java.lang.@org.jetbrains.annotations.NotNull String)",
    "Profession()",
    "BlockExplodeEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float)",
    "BlockExplodeEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.block.@org.jetbrains.annotations.NotNull BlockState,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float)",
    "BrewingStartEvent(org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,int)",
    "setMessage(java.lang.@org.jetbrains.annotations.Nullable String)",
    "PrepareItemEnchantEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Player,org.bukkit.inventory.@org.jetbrains.annotations.NotNull InventoryView,org.bukkit.block.@org.jetbrains.annotations.NotNull Block,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.enchantments.@org.jetbrains.annotations.Nullable EnchantmentOffer @org.jetbrains.annotations.NotNull [],int)",
    "EntityExplodeEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.@org.jetbrains.annotations.NotNull Location,java.util.@org.jetbrains.annotations.NotNull List\u003corg.bukkit.block.Block\u003e,float)",
    "EntityPortalEvent(org.bukkit.entity.@org.jetbrains.annotations.NotNull Entity,org.bukkit.@org.jetbrains.annotations.NotNull Location,org.bukkit.@org.jetbrains.annotations.Nullable Location,int,org.bukkit.PortalType)",
    "InventoryType(int,java.lang.String)",
    "InventoryType(int,java.lang.String,boolean)",
    "PrepareAnvilEvent(org.bukkit.inventory.@org.jetbrains.annotations.NotNull InventoryView,org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "TradeSelectEvent(org.bukkit.inventory.@org.jetbrains.annotations.NotNull InventoryView,int)",
    "durabilityToXpOp",
    "getStructure(java.lang.String)",
    "getStructureType(java.lang.String)",
    "setArmor(org.bukkit.inventory.@org.jetbrains.annotations.Nullable ItemStack)",
    "InventoryView()",
    "meta",
    "setItemMeta0(org.bukkit.inventory.meta.@org.jetbrains.annotations.Nullable ItemMeta,org.bukkit.@org.jetbrains.annotations.NotNull Material)",
    "SmithingRecipe(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice)",
    "SmithingRecipe(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.inventory.@org.jetbrains.annotations.NotNull ItemStack,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice,org.bukkit.inventory.@org.jetbrains.annotations.NotNull RecipeChoice,boolean)",
    "Type(int,java.lang.String)",
    "UPPER_MAP_CURSOR_TYPE_BOUND",
    "\u003cP,C\u003eget(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.persistence.@org.jetbrains.annotations.NotNull PersistentDataType\u003cP,C\u003e)",
    "\u003cP,C\u003egetOrDefault(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.persistence.@org.jetbrains.annotations.NotNull PersistentDataType\u003cP,C\u003e, C)",
    "\u003cP,C\u003ehas(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey,org.bukkit.persistence.@org.jetbrains.annotations.NotNull PersistentDataType\u003cP,C\u003e)",
    "copyTo(org.bukkit.persistence.@org.jetbrains.annotations.NotNull PersistentDataContainer,boolean)",
    "has(org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey)",
    "ChannelNameTooLongException(java.lang.String)"
  ],
  "membersChanged": [
    "CUT_COPPER_STAIRS",
    "GLASS",
    "PRISMARINE",
    "PRISMARINE_STAIRS",
    "REDSTONE_TORCH",
    "SOUL_TORCH",
    "TORCH",
    "TARGET",
    "effect",
    "RESPAWN_ANCHOR",
    "POTION",
    "DESERT",
    "JUNGLE",
    "PLAINS",
    "SAVANNA",
    "SWAMP",
    "TAIGA",
    "ARROW",
    "DRAGON_BREATH",
    "TRIDENT",
    "WIND_CHARGE",
    "MANSION",
    "MONUMENT",
    "SWAMP_HUT",
    "TRIAL_CHAMBERS",
    "VILLAGE_DESERT",
    "VILLAGE_PLAINS",
    "VILLAGE_SAVANNA",
    "VILLAGE_SNOWY",
    "VILLAGE_TAIGA",
    "JUNGLE_TEMPLE",
    "BORDER",
    "CHARCOAL",
    "COAL",
    "BUNDLE",
    "BELL",
    "ACACIA_BOAT",
    "ACACIA_BUTTON",
    "ACACIA_CHEST_BOAT",
    "ACACIA_DOOR",
    "ACACIA_FENCE",
    "ACACIA_FENCE_GATE",
    "ACACIA_HANGING_SIGN",
    "ACACIA_LEAVES",
    "ACACIA_LOG",
    "ACACIA_PLANKS",
    "ACACIA_PRESSURE_PLATE",
    "ACACIA_SAPLING",
    "ACACIA_SIGN",
    "ACACIA_SLAB",
    "ACACIA_STAIRS",
    "ACACIA_TRAPDOOR",
    "ACACIA_WOOD",
    "ACTIVATOR_RAIL",
    "ALLAY_SPAWN_EGG",
    "ALLIUM",
    "AMETHYST_BLOCK",
    "AMETHYST_CLUSTER",
    "AMETHYST_SHARD",
    "ANCIENT_DEBRIS",
    "ANDESITE",
    "ANDESITE_SLAB",
    "ANDESITE_STAIRS",
    "ANDESITE_WALL",
    "ANGLER_POTTERY_SHERD",
    "ANVIL",
    "APPLE",
    "ARCHER_POTTERY_SHERD",
    "ARMADILLO_SCUTE",
    "ARMADILLO_SPAWN_EGG",
    "ARMS_UP_POTTERY_SHERD",
    "AXOLOTL_BUCKET",
    "AXOLOTL_SPAWN_EGG",
    "AZALEA",
    "AZALEA_LEAVES",
    "AZURE_BLUET",
    "BAKED_POTATO",
    "BAMBOO",
    "BAMBOO_BLOCK",
    "BAMBOO_BUTTON",
    "BAMBOO_CHEST_RAFT",
    "BAMBOO_DOOR",
    "BAMBOO_FENCE",
    "BAMBOO_FENCE_GATE",
    "BAMBOO_HANGING_SIGN",
    "BAMBOO_MOSAIC",
    "BAMBOO_MOSAIC_SLAB",
    "BAMBOO_MOSAIC_STAIRS",
    "BAMBOO_PLANKS",
    "BAMBOO_PRESSURE_PLATE",
    "BAMBOO_RAFT",
    "BAMBOO_SIGN",
    "BAMBOO_SLAB",
    "BAMBOO_STAIRS",
    "BAMBOO_TRAPDOOR",
    "BARREL",
    "BARRIER",
    "BASALT",
    "BAT_SPAWN_EGG",
    "BEACON",
    "BEDROCK",
    "BEEF",
    "BEEHIVE",
    "BEETROOT",
    "BEETROOT_SEEDS",
    "BEETROOT_SOUP",
    "BEE_NEST",
    "BEE_SPAWN_EGG",
    "BIG_DRIPLEAF",
    "BIRCH_BOAT",
    "BIRCH_BUTTON",
    "BIRCH_CHEST_BOAT",
    "BIRCH_DOOR",
    "BIRCH_FENCE",
    "BIRCH_FENCE_GATE",
    "BIRCH_HANGING_SIGN",
    "BIRCH_LEAVES",
    "BIRCH_LOG",
    "BIRCH_PLANKS",
    "BIRCH_PRESSURE_PLATE",
    "BIRCH_SAPLING",
    "BIRCH_SIGN",
    "BIRCH_SLAB",
    "BIRCH_STAIRS",
    "BIRCH_TRAPDOOR",
    "BIRCH_WOOD",
    "BLACKSTONE",
    "BLACKSTONE_SLAB",
    "BLACKSTONE_STAIRS",
    "BLACKSTONE_WALL",
    "BLACK_BANNER",
    "BLACK_BED",
    "BLACK_CANDLE",
    "BLACK_CARPET",
    "BLACK_CONCRETE",
    "BLACK_CONCRETE_POWDER",
    "BLACK_DYE",
    "BLACK_GLAZED_TERRACOTTA",
    "BLACK_SHULKER_BOX",
    "BLACK_STAINED_GLASS",
    "BLACK_STAINED_GLASS_PANE",
    "BLACK_TERRACOTTA",
    "BLACK_WOOL",
    "BLADE_POTTERY_SHERD",
    "BLAST_FURNACE",
    "BLAZE_POWDER",
    "BLAZE_ROD",
    "BLAZE_SPAWN_EGG",
    "BLUE_BANNER",
    "BLUE_BED",
    "BLUE_CANDLE",
    "BLUE_CARPET",
    "BLUE_CONCRETE",
    "BLUE_CONCRETE_POWDER",
    "BLUE_DYE",
    "BLUE_GLAZED_TERRACOTTA",
    "BLUE_ICE",
    "BLUE_ORCHID",
    "BLUE_SHULKER_BOX",
    "BLUE_STAINED_GLASS",
    "BLUE_STAINED_GLASS_PANE",
    "BLUE_TERRACOTTA",
    "BLUE_WOOL",
    "BOGGED_SPAWN_EGG",
    "BOLT_ARMOR_TRIM_SMITHING_TEMPLATE",
    "BONE",
    "BONE_BLOCK",
    "BONE_MEAL",
    "BOOK",
    "BOOKSHELF",
    "BOW",
    "BOWL",
    "BRAIN_CORAL",
    "BRAIN_CORAL_BLOCK",
    "BRAIN_CORAL_FAN",
    "BREAD",
    "BREEZE_ROD",
    "BREEZE_SPAWN_EGG",
    "BREWER_POTTERY_SHERD",
    "BREWING_STAND",
    "BRICK",
    "BRICKS",
    "BRICK_SLAB",
    "BRICK_STAIRS",
    "BRICK_WALL",
    "BROWN_BANNER",
    "BROWN_BED",
    "BROWN_CANDLE",
    "BROWN_CARPET",
    "BROWN_CONCRETE",
    "BROWN_CONCRETE_POWDER",
    "BROWN_DYE",
    "BROWN_GLAZED_TERRACOTTA",
    "BROWN_MUSHROOM",
    "BROWN_MUSHROOM_BLOCK",
    "BROWN_SHULKER_BOX",
    "BROWN_STAINED_GLASS",
    "BROWN_STAINED_GLASS_PANE",
    "BROWN_TERRACOTTA",
    "BROWN_WOOL",
    "BRUSH",
    "BUBBLE_CORAL",
    "BUBBLE_CORAL_BLOCK",
    "BUBBLE_CORAL_FAN",
    "BUCKET",
    "BUDDING_AMETHYST",
    "BURN_POTTERY_SHERD",
    "CAKE",
    "CALCITE",
    "CALIBRATED_SCULK_SENSOR",
    "CAMEL_SPAWN_EGG",
    "CAMPFIRE",
    "CANDLE",
    "CARROT",
    "CARROT_ON_A_STICK",
    "CARTOGRAPHY_TABLE",
    "CARVED_PUMPKIN",
    "CAT_SPAWN_EGG",
    "CAULDRON",
    "CAVE_SPIDER_SPAWN_EGG",
    "CHAIN",
    "CHAINMAIL_BOOTS",
    "CHAINMAIL_CHESTPLATE",
    "CHAINMAIL_HELMET",
    "CHAINMAIL_LEGGINGS",
    "CHAIN_COMMAND_BLOCK",
    "CHERRY_BOAT",
    "CHERRY_BUTTON",
    "CHERRY_CHEST_BOAT",
    "CHERRY_DOOR",
    "CHERRY_FENCE",
    "CHERRY_FENCE_GATE",
    "CHERRY_HANGING_SIGN",
    "CHERRY_LEAVES",
    "CHERRY_LOG",
    "CHERRY_PLANKS",
    "CHERRY_PRESSURE_PLATE",
    "CHERRY_SAPLING",
    "CHERRY_SIGN",
    "CHERRY_SLAB",
    "CHERRY_STAIRS",
    "CHERRY_TRAPDOOR",
    "CHERRY_WOOD",
    "CHEST_MINECART",
    "CHICKEN_SPAWN_EGG",
    "CHIPPED_ANVIL",
    "CHISELED_BOOKSHELF",
    "CHISELED_COPPER",
    "CHISELED_DEEPSLATE",
    "CHISELED_NETHER_BRICKS",
    "CHISELED_POLISHED_BLACKSTONE",
    "CHISELED_QUARTZ_BLOCK",
    "CHISELED_RED_SANDSTONE",
    "CHISELED_SANDSTONE",
    "CHISELED_STONE_BRICKS",
    "CHISELED_TUFF",
    "CHISELED_TUFF_BRICKS",
    "CHORUS_FLOWER",
    "CHORUS_FRUIT",
    "CHORUS_PLANT",
    "CLAY",
    "CLAY_BALL",
    "CLOCK",
    "COAL_BLOCK",
    "COAL_ORE",
    "COARSE_DIRT",
    "COAST_ARMOR_TRIM_SMITHING_TEMPLATE",
    "COBBLED_DEEPSLATE",
    "COBBLED_DEEPSLATE_SLAB",
    "COBBLED_DEEPSLATE_STAIRS",
    "COBBLED_DEEPSLATE_WALL",
    "COBBLESTONE",
    "COBBLESTONE_SLAB",
    "COBBLESTONE_STAIRS",
    "COBBLESTONE_WALL",
    "COBWEB",
    "COCOA_BEANS",
    "COD_BUCKET",
    "COD_SPAWN_EGG",
    "COMMAND_BLOCK",
    "COMMAND_BLOCK_MINECART",
    "COMPARATOR",
    "COMPASS",
    "COMPOSTER",
    "CONDUIT",
    "COOKED_BEEF",
    "COOKED_CHICKEN",
    "COOKED_COD",
    "COOKED_MUTTON",
    "COOKED_PORKCHOP",
    "COOKED_RABBIT",
    "COOKED_SALMON",
    "COOKIE",
    "COPPER_BLOCK",
    "COPPER_BULB",
    "COPPER_DOOR",
    "COPPER_GRATE",
    "COPPER_INGOT",
    "COPPER_ORE",
    "COPPER_TRAPDOOR",
    "CORNFLOWER",
    "COW_SPAWN_EGG",
    "CRACKED_DEEPSLATE_BRICKS",
    "CRACKED_DEEPSLATE_TILES",
    "CRACKED_NETHER_BRICKS",
    "CRACKED_POLISHED_BLACKSTONE_BRICKS",
    "CRACKED_STONE_BRICKS",
    "CRAFTER",
    "CRAFTING_TABLE",
    "CREEPER_BANNER_PATTERN",
    "CREEPER_HEAD",
    "CREEPER_SPAWN_EGG",
    "CRIMSON_BUTTON",
    "CRIMSON_DOOR",
    "CRIMSON_FENCE",
    "CRIMSON_FENCE_GATE",
    "CRIMSON_FUNGUS",
    "CRIMSON_HANGING_SIGN",
    "CRIMSON_HYPHAE",
    "CRIMSON_NYLIUM",
    "CRIMSON_PLANKS",
    "CRIMSON_PRESSURE_PLATE",
    "CRIMSON_ROOTS",
    "CRIMSON_SIGN",
    "CRIMSON_SLAB",
    "CRIMSON_STAIRS",
    "CRIMSON_STEM",
    "CRIMSON_TRAPDOOR",
    "CROSSBOW",
    "CRYING_OBSIDIAN",
    "CUT_COPPER",
    "CUT_COPPER_SLAB",
    "CUT_RED_SANDSTONE",
    "CUT_RED_SANDSTONE_SLAB",
    "CUT_SANDSTONE",
    "CUT_SANDSTONE_SLAB",
    "CYAN_BANNER",
    "CYAN_BED",
    "CYAN_CANDLE",
    "CYAN_CARPET",
    "CYAN_CONCRETE",
    "CYAN_CONCRETE_POWDER",
    "CYAN_DYE",
    "CYAN_GLAZED_TERRACOTTA",
    "CYAN_SHULKER_BOX",
    "CYAN_STAINED_GLASS",
    "CYAN_STAINED_GLASS_PANE",
    "CYAN_TERRACOTTA",
    "CYAN_WOOL",
    "DAMAGED_ANVIL",
    "DANDELION",
    "DANGER_POTTERY_SHERD",
    "DARK_OAK_BOAT",
    "DARK_OAK_BUTTON",
    "DARK_OAK_CHEST_BOAT",
    "DARK_OAK_DOOR",
    "DARK_OAK_FENCE",
    "DARK_OAK_FENCE_GATE",
    "DARK_OAK_HANGING_SIGN",
    "DARK_OAK_LEAVES",
    "DARK_OAK_LOG",
    "DARK_OAK_PLANKS",
    "DARK_OAK_PRESSURE_PLATE",
    "DARK_OAK_SAPLING",
    "DARK_OAK_SIGN",
    "DARK_OAK_SLAB",
    "DARK_OAK_STAIRS",
    "DARK_OAK_TRAPDOOR",
    "DARK_OAK_WOOD",
    "DARK_PRISMARINE",
    "DARK_PRISMARINE_SLAB",
    "DARK_PRISMARINE_STAIRS",
    "DAYLIGHT_DETECTOR",
    "DEAD_BRAIN_CORAL",
    "DEAD_BRAIN_CORAL_BLOCK",
    "DEAD_BRAIN_CORAL_FAN",
    "DEAD_BUBBLE_CORAL",
    "DEAD_BUBBLE_CORAL_BLOCK",
    "DEAD_BUBBLE_CORAL_FAN",
    "DEAD_BUSH",
    "DEAD_FIRE_CORAL",
    "DEAD_FIRE_CORAL_BLOCK",
    "DEAD_FIRE_CORAL_FAN",
    "DEAD_HORN_CORAL",
    "DEAD_HORN_CORAL_BLOCK",
    "DEAD_HORN_CORAL_FAN",
    "DEAD_TUBE_CORAL",
    "DEAD_TUBE_CORAL_BLOCK",
    "DEAD_TUBE_CORAL_FAN",
    "DEBUG_STICK",
    "DECORATED_POT",
    "DEEPSLATE",
    "DEEPSLATE_BRICKS",
    "DEEPSLATE_BRICK_SLAB",
    "DEEPSLATE_BRICK_STAIRS",
    "DEEPSLATE_BRICK_WALL",
    "DEEPSLATE_COAL_ORE",
    "DEEPSLATE_COPPER_ORE",
    "DEEPSLATE_DIAMOND_ORE",
    "DEEPSLATE_EMERALD_ORE",
    "DEEPSLATE_GOLD_ORE",
    "DEEPSLATE_IRON_ORE",
    "DEEPSLATE_LAPIS_ORE",
    "DEEPSLATE_REDSTONE_ORE",
    "DEEPSLATE_TILES",
    "DEEPSLATE_TILE_SLAB",
    "DEEPSLATE_TILE_STAIRS",
    "DEEPSLATE_TILE_WALL",
    "DETECTOR_RAIL",
    "DIAMOND_AXE",
    "DIAMOND_BLOCK",
    "DIAMOND_BOOTS",
    "DIAMOND_CHESTPLATE",
    "DIAMOND_HELMET",
    "DIAMOND_HOE",
    "DIAMOND_HORSE_ARMOR",
    "DIAMOND_LEGGINGS",
    "DIAMOND_ORE",
    "DIAMOND_PICKAXE",
    "DIAMOND_SHOVEL",
    "DIAMOND_SWORD",
    "DIORITE",
    "DIORITE_SLAB",
    "DIORITE_STAIRS",
    "DIORITE_WALL",
    "DIRT_PATH",
    "DISC_FRAGMENT_5",
    "DISPENSER",
    "DOLPHIN_SPAWN_EGG",
    "DONKEY_SPAWN_EGG",
    "DRAGON_EGG",
    "DRAGON_HEAD",
    "DRIED_KELP",
    "DRIED_KELP_BLOCK",
    "DRIPSTONE_BLOCK",
    "DROPPER",
    "DROWNED_SPAWN_EGG",
    "DUNE_ARMOR_TRIM_SMITHING_TEMPLATE",
    "ECHO_SHARD",
    "EGG",
    "ELDER_GUARDIAN_SPAWN_EGG",
    "ELYTRA",
    "EMERALD_BLOCK",
    "EMERALD_ORE",
    "ENCHANTED_BOOK",
    "ENCHANTED_GOLDEN_APPLE",
    "ENCHANTING_TABLE",
    "ENDERMAN_SPAWN_EGG",
    "ENDERMITE_SPAWN_EGG",
    "ENDER_CHEST",
    "ENDER_DRAGON_SPAWN_EGG",
    "ENDER_EYE",
    "ENDER_PEARL",
    "END_CRYSTAL",
    "END_PORTAL_FRAME",
    "END_ROD",
    "END_STONE",
    "END_STONE_BRICKS",
    "END_STONE_BRICK_SLAB",
    "END_STONE_BRICK_STAIRS",
    "END_STONE_BRICK_WALL",
    "EVOKER_SPAWN_EGG",
    "EXPERIENCE_BOTTLE",
    "EXPLORER_POTTERY_SHERD",
    "EXPOSED_CHISELED_COPPER",
    "EXPOSED_COPPER",
    "EXPOSED_COPPER_BULB",
    "EXPOSED_COPPER_DOOR",
    "EXPOSED_COPPER_GRATE",
    "EXPOSED_COPPER_TRAPDOOR",
    "EXPOSED_CUT_COPPER",
    "EXPOSED_CUT_COPPER_SLAB",
    "EXPOSED_CUT_COPPER_STAIRS",
    "EYE_ARMOR_TRIM_SMITHING_TEMPLATE",
    "FARMLAND",
    "FEATHER",
    "FERMENTED_SPIDER_EYE",
    "FERN",
    "FILLED_MAP",
    "FIREWORK_ROCKET",
    "FIREWORK_STAR",
    "FIRE_CHARGE",
    "FIRE_CORAL",
    "FIRE_CORAL_BLOCK",
    "FIRE_CORAL_FAN",
    "FISHING_ROD",
    "FLETCHING_TABLE",
    "FLINT",
    "FLINT_AND_STEEL",
    "FLOWERING_AZALEA",
    "FLOWERING_AZALEA_LEAVES",
    "FLOWER_BANNER_PATTERN",
    "FLOWER_POT",
    "FLOW_ARMOR_TRIM_SMITHING_TEMPLATE",
    "FLOW_BANNER_PATTERN",
    "FLOW_POTTERY_SHERD",
    "FOX_SPAWN_EGG",
    "FRIEND_POTTERY_SHERD",
    "FROGSPAWN",
    "FROG_SPAWN_EGG",
    "FURNACE",
    "FURNACE_MINECART",
    "GHAST_SPAWN_EGG",
    "GHAST_TEAR",
    "GILDED_BLACKSTONE",
    "GLASS_BOTTLE",
    "GLASS_PANE",
    "GLISTERING_MELON_SLICE",
    "GLOBE_BANNER_PATTERN",
    "GLOWSTONE",
    "GLOWSTONE_DUST",
    "GLOW_BERRIES",
    "GLOW_INK_SAC",
    "GLOW_ITEM_FRAME",
    "GLOW_LICHEN",
    "GLOW_SQUID_SPAWN_EGG",
    "GOAT_HORN",
    "GOAT_SPAWN_EGG",
    "GOLDEN_APPLE",
    "GOLDEN_AXE",
    "GOLDEN_BOOTS",
    "GOLDEN_CARROT",
    "GOLDEN_CHESTPLATE",
    "GOLDEN_HELMET",
    "GOLDEN_HOE",
    "GOLDEN_HORSE_ARMOR",
    "GOLDEN_LEGGINGS",
    "GOLDEN_PICKAXE",
    "GOLDEN_SHOVEL",
    "GOLDEN_SWORD",
    "GOLD_BLOCK",
    "GOLD_INGOT",
    "GOLD_NUGGET",
    "GOLD_ORE",
    "GRANITE",
    "GRANITE_SLAB",
    "GRANITE_STAIRS",
    "GRANITE_WALL",
    "GRASS_BLOCK",
    "GRAVEL",
    "GRAY_BANNER",
    "GRAY_BED",
    "GRAY_CANDLE",
    "GRAY_CARPET",
    "GRAY_CONCRETE",
    "GRAY_CONCRETE_POWDER",
    "GRAY_DYE",
    "GRAY_GLAZED_TERRACOTTA",
    "GRAY_SHULKER_BOX",
    "GRAY_STAINED_GLASS",
    "GRAY_STAINED_GLASS_PANE",
    "GRAY_TERRACOTTA",
    "GRAY_WOOL",
    "GREEN_BANNER",
    "GREEN_BED",
    "GREEN_CANDLE",
    "GREEN_CARPET",
    "GREEN_CONCRETE",
    "GREEN_CONCRETE_POWDER",
    "GREEN_DYE",
    "GREEN_GLAZED_TERRACOTTA",
    "GREEN_SHULKER_BOX",
    "GREEN_STAINED_GLASS",
    "GREEN_STAINED_GLASS_PANE",
    "GREEN_TERRACOTTA",
    "GREEN_WOOL",
    "GRINDSTONE",
    "GUARDIAN_SPAWN_EGG",
    "GUNPOWDER",
    "GUSTER_BANNER_PATTERN",
    "GUSTER_POTTERY_SHERD",
    "HANGING_ROOTS",
    "HAY_BLOCK",
    "HEARTBREAK_POTTERY_SHERD",
    "HEART_OF_THE_SEA",
    "HEART_POTTERY_SHERD",
    "HEAVY_CORE",
    "HEAVY_WEIGHTED_PRESSURE_PLATE",
    "HOGLIN_SPAWN_EGG",
    "HONEYCOMB",
    "HONEYCOMB_BLOCK",
    "HONEY_BLOCK",
    "HONEY_BOTTLE",
    "HOPPER",
    "HOPPER_MINECART",
    "HORN_CORAL",
    "HORN_CORAL_BLOCK",
    "HORN_CORAL_FAN",
    "HORSE_SPAWN_EGG",
    "HOST_ARMOR_TRIM_SMITHING_TEMPLATE",
    "HOWL_POTTERY_SHERD",
    "HUSK_SPAWN_EGG",
    "INFESTED_CHISELED_STONE_BRICKS",
    "INFESTED_COBBLESTONE",
    "INFESTED_CRACKED_STONE_BRICKS",
    "INFESTED_DEEPSLATE",
    "INFESTED_MOSSY_STONE_BRICKS",
    "INFESTED_STONE",
    "INFESTED_STONE_BRICKS",
    "INK_SAC",
    "IRON_AXE",
    "IRON_BARS",
    "IRON_BLOCK",
    "IRON_BOOTS",
    "IRON_CHESTPLATE",
    "IRON_DOOR",
    "IRON_GOLEM_SPAWN_EGG",
    "IRON_HELMET",
    "IRON_HOE",
    "IRON_HORSE_ARMOR",
    "IRON_INGOT",
    "IRON_LEGGINGS",
    "IRON_NUGGET",
    "IRON_ORE",
    "IRON_PICKAXE",
    "IRON_SHOVEL",
    "IRON_SWORD",
    "IRON_TRAPDOOR",
    "ITEM_FRAME",
    "JACK_O_LANTERN",
    "JUKEBOX",
    "JUNGLE_BOAT",
    "JUNGLE_BUTTON",
    "JUNGLE_CHEST_BOAT",
    "JUNGLE_DOOR",
    "JUNGLE_FENCE",
    "JUNGLE_FENCE_GATE",
    "JUNGLE_HANGING_SIGN",
    "JUNGLE_LEAVES",
    "JUNGLE_LOG",
    "JUNGLE_PLANKS",
    "JUNGLE_PRESSURE_PLATE",
    "JUNGLE_SAPLING",
    "JUNGLE_SIGN",
    "JUNGLE_SLAB",
    "JUNGLE_STAIRS",
    "JUNGLE_TRAPDOOR",
    "JUNGLE_WOOD",
    "KELP",
    "KNOWLEDGE_BOOK",
    "LADDER",
    "LANTERN",
    "LAPIS_BLOCK",
    "LAPIS_LAZULI",
    "LAPIS_ORE",
    "LARGE_AMETHYST_BUD",
    "LARGE_FERN",
    "LAVA_BUCKET",
    "LEAD",
    "LEATHER",
    "LEATHER_BOOTS",
    "LEATHER_CHESTPLATE",
    "LEATHER_HELMET",
    "LEATHER_HORSE_ARMOR",
    "LEATHER_LEGGINGS",
    "LECTERN",
    "LEVER",
    "LIGHT",
    "LIGHTNING_ROD",
    "LIGHT_BLUE_BANNER",
    "LIGHT_BLUE_BED",
    "LIGHT_BLUE_CANDLE",
    "LIGHT_BLUE_CARPET",
    "LIGHT_BLUE_CONCRETE",
    "LIGHT_BLUE_CONCRETE_POWDER",
    "LIGHT_BLUE_DYE",
    "LIGHT_BLUE_GLAZED_TERRACOTTA",
    "LIGHT_BLUE_SHULKER_BOX",
    "LIGHT_BLUE_STAINED_GLASS",
    "LIGHT_BLUE_STAINED_GLASS_PANE",
    "LIGHT_BLUE_TERRACOTTA",
    "LIGHT_BLUE_WOOL",
    "LIGHT_GRAY_BANNER",
    "LIGHT_GRAY_BED",
    "LIGHT_GRAY_CANDLE",
    "LIGHT_GRAY_CARPET",
    "LIGHT_GRAY_CONCRETE",
    "LIGHT_GRAY_CONCRETE_POWDER",
    "LIGHT_GRAY_DYE",
    "LIGHT_GRAY_GLAZED_TERRACOTTA",
    "LIGHT_GRAY_SHULKER_BOX",
    "LIGHT_GRAY_STAINED_GLASS",
    "LIGHT_GRAY_STAINED_GLASS_PANE",
    "LIGHT_GRAY_TERRACOTTA",
    "LIGHT_GRAY_WOOL",
    "LIGHT_WEIGHTED_PRESSURE_PLATE",
    "LILAC",
    "LILY_OF_THE_VALLEY",
    "LILY_PAD",
    "LIME_BANNER",
    "LIME_BED",
    "LIME_CANDLE",
    "LIME_CARPET",
    "LIME_CONCRETE",
    "LIME_CONCRETE_POWDER",
    "LIME_DYE",
    "LIME_GLAZED_TERRACOTTA",
    "LIME_SHULKER_BOX",
    "LIME_STAINED_GLASS",
    "LIME_STAINED_GLASS_PANE",
    "LIME_TERRACOTTA",
    "LIME_WOOL",
    "LINGERING_POTION",
    "LLAMA_SPAWN_EGG",
    "LODESTONE",
    "LOOM",
    "MACE",
    "MAGENTA_BANNER",
    "MAGENTA_BED",
    "MAGENTA_CANDLE",
    "MAGENTA_CARPET",
    "MAGENTA_CONCRETE",
    "MAGENTA_CONCRETE_POWDER",
    "MAGENTA_DYE",
    "MAGENTA_GLAZED_TERRACOTTA",
    "MAGENTA_SHULKER_BOX",
    "MAGENTA_STAINED_GLASS",
    "MAGENTA_STAINED_GLASS_PANE",
    "MAGENTA_TERRACOTTA",
    "MAGENTA_WOOL",
    "MAGMA_BLOCK",
    "MAGMA_CREAM",
    "MAGMA_CUBE_SPAWN_EGG",
    "MANGROVE_BOAT",
    "MANGROVE_BUTTON",
    "MANGROVE_CHEST_BOAT",
    "MANGROVE_DOOR",
    "MANGROVE_FENCE",
    "MANGROVE_FENCE_GATE",
    "MANGROVE_HANGING_SIGN",
    "MANGROVE_LEAVES",
    "MANGROVE_LOG",
    "MANGROVE_PLANKS",
    "MANGROVE_PRESSURE_PLATE",
    "MANGROVE_PROPAGULE",
    "MANGROVE_ROOTS",
    "MANGROVE_SIGN",
    "MANGROVE_SLAB",
    "MANGROVE_STAIRS",
    "MANGROVE_TRAPDOOR",
    "MANGROVE_WOOD",
    "MAP",
    "MEDIUM_AMETHYST_BUD",
    "MELON",
    "MELON_SEEDS",
    "MELON_SLICE",
    "MILK_BUCKET",
    "MINECART",
    "MINER_POTTERY_SHERD",
    "MOJANG_BANNER_PATTERN",
    "MOOSHROOM_SPAWN_EGG",
    "MOSSY_COBBLESTONE",
    "MOSSY_COBBLESTONE_SLAB",
    "MOSSY_COBBLESTONE_STAIRS",
    "MOSSY_COBBLESTONE_WALL",
    "MOSSY_STONE_BRICKS",
    "MOSSY_STONE_BRICK_SLAB",
    "MOSSY_STONE_BRICK_STAIRS",
    "MOSSY_STONE_BRICK_WALL",
    "MOSS_BLOCK",
    "MOSS_CARPET",
    "MOURNER_POTTERY_SHERD",
    "MUD",
    "MUDDY_MANGROVE_ROOTS",
    "MUD_BRICKS",
    "MUD_BRICK_SLAB",
    "MUD_BRICK_STAIRS",
    "MUD_BRICK_WALL",
    "MULE_SPAWN_EGG",
    "MUSHROOM_STEM",
    "MUSHROOM_STEW",
    "MUSIC_DISC_11",
    "MUSIC_DISC_13",
    "MUSIC_DISC_5",
    "MUSIC_DISC_BLOCKS",
    "MUSIC_DISC_CAT",
    "MUSIC_DISC_CHIRP",
    "MUSIC_DISC_FAR",
    "MUSIC_DISC_MALL",
    "MUSIC_DISC_MELLOHI",
    "MUSIC_DISC_OTHERSIDE",
    "MUSIC_DISC_PIGSTEP",
    "MUSIC_DISC_RELIC",
    "MUSIC_DISC_STAL",
    "MUSIC_DISC_STRAD",
    "MUSIC_DISC_WAIT",
    "MUSIC_DISC_WARD",
    "MUTTON",
    "MYCELIUM",
    "NAME_TAG",
    "NAUTILUS_SHELL",
    "NETHERITE_AXE",
    "NETHERITE_BLOCK",
    "NETHERITE_BOOTS",
    "NETHERITE_CHESTPLATE",
    "NETHERITE_HELMET",
    "NETHERITE_HOE",
    "NETHERITE_INGOT",
    "NETHERITE_LEGGINGS",
    "NETHERITE_PICKAXE",
    "NETHERITE_SCRAP",
    "NETHERITE_SHOVEL",
    "NETHERITE_SWORD",
    "NETHERITE_UPGRADE_SMITHING_TEMPLATE",
    "NETHERRACK",
    "NETHER_BRICK",
    "NETHER_BRICKS",
    "NETHER_BRICK_FENCE",
    "NETHER_BRICK_SLAB",
    "NETHER_BRICK_STAIRS",
    "NETHER_BRICK_WALL",
    "NETHER_GOLD_ORE",
    "NETHER_QUARTZ_ORE",
    "NETHER_SPROUTS",
    "NETHER_STAR",
    "NETHER_WART",
    "NETHER_WART_BLOCK",
    "NOTE_BLOCK",
    "OAK_BOAT",
    "OAK_BUTTON",
    "OAK_CHEST_BOAT",
    "OAK_DOOR",
    "OAK_FENCE",
    "OAK_FENCE_GATE",
    "OAK_HANGING_SIGN",
    "OAK_LEAVES",
    "OAK_LOG",
    "OAK_PLANKS",
    "OAK_PRESSURE_PLATE",
    "OAK_SAPLING",
    "OAK_SIGN",
    "OAK_SLAB",
    "OAK_STAIRS",
    "OAK_TRAPDOOR",
    "OAK_WOOD",
    "OBSERVER",
    "OBSIDIAN",
    "OCELOT_SPAWN_EGG",
    "OCHRE_FROGLIGHT",
    "OMINOUS_BOTTLE",
    "OMINOUS_TRIAL_KEY",
    "ORANGE_BANNER",
    "ORANGE_BED",
    "ORANGE_CANDLE",
    "ORANGE_CARPET",
    "ORANGE_CONCRETE",
    "ORANGE_CONCRETE_POWDER",
    "ORANGE_DYE",
    "ORANGE_GLAZED_TERRACOTTA",
    "ORANGE_SHULKER_BOX",
    "ORANGE_STAINED_GLASS",
    "ORANGE_STAINED_GLASS_PANE",
    "ORANGE_TERRACOTTA",
    "ORANGE_TULIP",
    "ORANGE_WOOL",
    "OXEYE_DAISY",
    "OXIDIZED_CHISELED_COPPER",
    "OXIDIZED_COPPER",
    "OXIDIZED_COPPER_BULB",
    "OXIDIZED_COPPER_DOOR",
    "OXIDIZED_COPPER_GRATE",
    "OXIDIZED_COPPER_TRAPDOOR",
    "OXIDIZED_CUT_COPPER",
    "OXIDIZED_CUT_COPPER_SLAB",
    "OXIDIZED_CUT_COPPER_STAIRS",
    "PACKED_ICE",
    "PACKED_MUD",
    "PAINTING",
    "PANDA_SPAWN_EGG",
    "PAPER",
    "PARROT_SPAWN_EGG",
    "PEARLESCENT_FROGLIGHT",
    "PEONY",
    "PETRIFIED_OAK_SLAB",
    "PHANTOM_MEMBRANE",
    "PHANTOM_SPAWN_EGG",
    "PIGLIN_BANNER_PATTERN",
    "PIGLIN_BRUTE_SPAWN_EGG",
    "PIGLIN_HEAD",
    "PIGLIN_SPAWN_EGG",
    "PIG_SPAWN_EGG",
    "PILLAGER_SPAWN_EGG",
    "PINK_BANNER",
    "PINK_BED",
    "PINK_CANDLE",
    "PINK_CARPET",
    "PINK_CONCRETE",
    "PINK_CONCRETE_POWDER",
    "PINK_DYE",
    "PINK_GLAZED_TERRACOTTA",
    "PINK_PETALS",
    "PINK_SHULKER_BOX",
    "PINK_STAINED_GLASS",
    "PINK_STAINED_GLASS_PANE",
    "PINK_TERRACOTTA",
    "PINK_TULIP",
    "PINK_WOOL",
    "PISTON",
    "PITCHER_PLANT",
    "PITCHER_POD",
    "PLAYER_HEAD",
    "PLENTY_POTTERY_SHERD",
    "PODZOL",
    "POINTED_DRIPSTONE",
    "POISONOUS_POTATO",
    "POLAR_BEAR_SPAWN_EGG",
    "POLISHED_ANDESITE",
    "POLISHED_ANDESITE_SLAB",
    "POLISHED_ANDESITE_STAIRS",
    "POLISHED_BASALT",
    "POLISHED_BLACKSTONE",
    "POLISHED_BLACKSTONE_BRICKS",
    "POLISHED_BLACKSTONE_BRICK_SLAB",
    "POLISHED_BLACKSTONE_BRICK_STAIRS",
    "POLISHED_BLACKSTONE_BRICK_WALL",
    "POLISHED_BLACKSTONE_BUTTON",
    "POLISHED_BLACKSTONE_PRESSURE_PLATE",
    "POLISHED_BLACKSTONE_SLAB",
    "POLISHED_BLACKSTONE_STAIRS",
    "POLISHED_BLACKSTONE_WALL",
    "POLISHED_DEEPSLATE",
    "POLISHED_DEEPSLATE_SLAB",
    "POLISHED_DEEPSLATE_STAIRS",
    "POLISHED_DEEPSLATE_WALL",
    "POLISHED_DIORITE",
    "POLISHED_DIORITE_SLAB",
    "POLISHED_DIORITE_STAIRS",
    "POLISHED_GRANITE",
    "POLISHED_GRANITE_SLAB",
    "POLISHED_GRANITE_STAIRS",
    "POLISHED_TUFF",
    "POLISHED_TUFF_SLAB",
    "POLISHED_TUFF_STAIRS",
    "POLISHED_TUFF_WALL",
    "POPPED_CHORUS_FRUIT",
    "POPPY",
    "PORKCHOP",
    "POTATO",
    "POWDER_SNOW_BUCKET",
    "POWERED_RAIL",
    "PRISMARINE_BRICKS",
    "PRISMARINE_BRICK_SLAB",
    "PRISMARINE_BRICK_STAIRS",
    "PRISMARINE_CRYSTALS",
    "PRISMARINE_SHARD",
    "PRISMARINE_SLAB",
    "PRISMARINE_WALL",
    "PRIZE_POTTERY_SHERD",
    "PUFFERFISH_BUCKET",
    "PUFFERFISH_SPAWN_EGG",
    "PUMPKIN",
    "PUMPKIN_PIE",
    "PUMPKIN_SEEDS",
    "PURPLE_BANNER",
    "PURPLE_BED",
    "PURPLE_CANDLE",
    "PURPLE_CARPET",
    "PURPLE_CONCRETE",
    "PURPLE_CONCRETE_POWDER",
    "PURPLE_DYE",
    "PURPLE_GLAZED_TERRACOTTA",
    "PURPLE_SHULKER_BOX",
    "PURPLE_STAINED_GLASS",
    "PURPLE_STAINED_GLASS_PANE",
    "PURPLE_TERRACOTTA",
    "PURPLE_WOOL",
    "PURPUR_BLOCK",
    "PURPUR_PILLAR",
    "PURPUR_SLAB",
    "PURPUR_STAIRS",
    "QUARTZ_BLOCK",
    "QUARTZ_BRICKS",
    "QUARTZ_PILLAR",
    "QUARTZ_SLAB",
    "QUARTZ_STAIRS",
    "RABBIT_FOOT",
    "RABBIT_HIDE",
    "RABBIT_SPAWN_EGG",
    "RABBIT_STEW",
    "RAIL",
    "RAISER_ARMOR_TRIM_SMITHING_TEMPLATE",
    "RAVAGER_SPAWN_EGG",
    "RAW_COPPER",
    "RAW_COPPER_BLOCK",
    "RAW_GOLD",
    "RAW_GOLD_BLOCK",
    "RAW_IRON",
    "RAW_IRON_BLOCK",
    "RECOVERY_COMPASS",
    "REDSTONE_BLOCK",
    "REDSTONE_LAMP",
    "REDSTONE_ORE",
    "RED_BANNER",
    "RED_BED",
    "RED_CANDLE",
    "RED_CARPET",
    "RED_CONCRETE",
    "RED_CONCRETE_POWDER",
    "RED_DYE",
    "RED_GLAZED_TERRACOTTA",
    "RED_MUSHROOM",
    "RED_MUSHROOM_BLOCK",
    "RED_NETHER_BRICKS",
    "RED_NETHER_BRICK_SLAB",
    "RED_NETHER_BRICK_STAIRS",
    "RED_NETHER_BRICK_WALL",
    "RED_SAND",
    "RED_SANDSTONE",
    "RED_SANDSTONE_SLAB",
    "RED_SANDSTONE_STAIRS",
    "RED_SANDSTONE_WALL",
    "RED_SHULKER_BOX",
    "RED_STAINED_GLASS",
    "RED_STAINED_GLASS_PANE",
    "RED_TERRACOTTA",
    "RED_TULIP",
    "RED_WOOL",
    "REINFORCED_DEEPSLATE",
    "REPEATER",
    "REPEATING_COMMAND_BLOCK",
    "RIB_ARMOR_TRIM_SMITHING_TEMPLATE",
    "ROOTED_DIRT",
    "ROSE_BUSH",
    "ROTTEN_FLESH",
    "SADDLE",
    "SALMON_BUCKET",
    "SALMON_SPAWN_EGG",
    "SANDSTONE",
    "SANDSTONE_SLAB",
    "SANDSTONE_STAIRS",
    "SANDSTONE_WALL",
    "SCAFFOLDING",
    "SCRAPE_POTTERY_SHERD",
    "SCULK",
    "SCULK_CATALYST",
    "SCULK_SENSOR",
    "SCULK_SHRIEKER",
    "SCULK_VEIN",
    "SEAGRASS",
    "SEA_LANTERN",
    "SEA_PICKLE",
    "SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE",
    "SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE",
    "SHEAF_POTTERY_SHERD",
    "SHEARS",
    "SHEEP_SPAWN_EGG",
    "SHELTER_POTTERY_SHERD",
    "SHIELD",
    "SHORT_GRASS",
    "SHROOMLIGHT",
    "SHULKER_BOX",
    "SHULKER_SHELL",
    "SHULKER_SPAWN_EGG",
    "SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE",
    "SILVERFISH_SPAWN_EGG",
    "SKELETON_HORSE_SPAWN_EGG",
    "SKELETON_SKULL",
    "SKELETON_SPAWN_EGG",
    "SKULL_BANNER_PATTERN",
    "SKULL_POTTERY_SHERD",
    "SLIME_BALL",
    "SLIME_BLOCK",
    "SLIME_SPAWN_EGG",
    "SMALL_AMETHYST_BUD",
    "SMALL_DRIPLEAF",
    "SMITHING_TABLE",
    "SMOKER",
    "SMOOTH_BASALT",
    "SMOOTH_QUARTZ",
    "SMOOTH_QUARTZ_SLAB",
    "SMOOTH_QUARTZ_STAIRS",
    "SMOOTH_RED_SANDSTONE",
    "SMOOTH_RED_SANDSTONE_SLAB",
    "SMOOTH_RED_SANDSTONE_STAIRS",
    "SMOOTH_SANDSTONE",
    "SMOOTH_SANDSTONE_SLAB",
    "SMOOTH_SANDSTONE_STAIRS",
    "SMOOTH_STONE",
    "SMOOTH_STONE_SLAB",
    "SNIFFER_EGG",
    "SNIFFER_SPAWN_EGG",
    "SNORT_POTTERY_SHERD",
    "SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE",
    "SNOW",
    "SNOWBALL",
    "SNOW_BLOCK",
    "SNOW_GOLEM_SPAWN_EGG",
    "SOUL_CAMPFIRE",
    "SOUL_LANTERN",
    "SOUL_SAND",
    "SOUL_SOIL",
    "SPAWNER",
    "SPECTRAL_ARROW",
    "SPIDER_EYE",
    "SPIDER_SPAWN_EGG",
    "SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE",
    "SPLASH_POTION",
    "SPONGE",
    "SPORE_BLOSSOM",
    "SPRUCE_BOAT",
    "SPRUCE_BUTTON",
    "SPRUCE_CHEST_BOAT",
    "SPRUCE_DOOR",
    "SPRUCE_FENCE",
    "SPRUCE_FENCE_GATE",
    "SPRUCE_HANGING_SIGN",
    "SPRUCE_LEAVES",
    "SPRUCE_LOG",
    "SPRUCE_PLANKS",
    "SPRUCE_PRESSURE_PLATE",
    "SPRUCE_SAPLING",
    "SPRUCE_SIGN",
    "SPRUCE_SLAB",
    "SPRUCE_STAIRS",
    "SPRUCE_TRAPDOOR",
    "SPRUCE_WOOD",
    "SPYGLASS",
    "SQUID_SPAWN_EGG",
    "STICK",
    "STICKY_PISTON",
    "STONE",
    "STONECUTTER",
    "STONE_AXE",
    "STONE_BRICK_SLAB",
    "STONE_BRICK_STAIRS",
    "STONE_BRICK_WALL",
    "STONE_BUTTON",
    "STONE_HOE",
    "STONE_PICKAXE",
    "STONE_PRESSURE_PLATE",
    "STONE_SHOVEL",
    "STONE_SLAB",
    "STONE_STAIRS",
    "STONE_SWORD",
    "STRAY_SPAWN_EGG",
    "STRIDER_SPAWN_EGG",
    "STRIPPED_ACACIA_LOG",
    "STRIPPED_ACACIA_WOOD",
    "STRIPPED_BAMBOO_BLOCK",
    "STRIPPED_BIRCH_LOG",
    "STRIPPED_BIRCH_WOOD",
    "STRIPPED_CHERRY_LOG",
    "STRIPPED_CHERRY_WOOD",
    "STRIPPED_CRIMSON_HYPHAE",
    "STRIPPED_CRIMSON_STEM",
    "STRIPPED_DARK_OAK_LOG",
    "STRIPPED_DARK_OAK_WOOD",
    "STRIPPED_JUNGLE_LOG",
    "STRIPPED_JUNGLE_WOOD",
    "STRIPPED_MANGROVE_LOG",
    "STRIPPED_MANGROVE_WOOD",
    "STRIPPED_OAK_LOG",
    "STRIPPED_OAK_WOOD",
    "STRIPPED_SPRUCE_LOG",
    "STRIPPED_SPRUCE_WOOD",
    "STRIPPED_WARPED_HYPHAE",
    "STRIPPED_WARPED_STEM",
    "STRUCTURE_BLOCK",
    "STRUCTURE_VOID",
    "SUGAR",
    "SUGAR_CANE",
    "SUNFLOWER",
    "SUSPICIOUS_GRAVEL",
    "SUSPICIOUS_SAND",
    "SUSPICIOUS_STEW",
    "SWEET_BERRIES",
    "TADPOLE_BUCKET",
    "TADPOLE_SPAWN_EGG",
    "TALL_GRASS",
    "TIDE_ARMOR_TRIM_SMITHING_TEMPLATE",
    "TINTED_GLASS",
    "TIPPED_ARROW",
    "TNT",
    "TNT_MINECART",
    "TORCHFLOWER",
    "TORCHFLOWER_SEEDS",
    "TOTEM_OF_UNDYING",
    "TRADER_LLAMA_SPAWN_EGG",
    "TRAPPED_CHEST",
    "TRIAL_KEY",
    "TRIAL_SPAWNER",
    "TRIPWIRE_HOOK",
    "TROPICAL_FISH_BUCKET",
    "TROPICAL_FISH_SPAWN_EGG",
    "TUBE_CORAL",
    "TUBE_CORAL_BLOCK",
    "TUBE_CORAL_FAN",
    "TUFF",
    "TUFF_BRICKS",
    "TUFF_BRICK_SLAB",
    "TUFF_BRICK_STAIRS",
    "TUFF_BRICK_WALL",
    "TUFF_SLAB",
    "TUFF_STAIRS",
    "TUFF_WALL",
    "TURTLE_EGG",
    "TURTLE_HELMET",
    "TURTLE_SCUTE",
    "TURTLE_SPAWN_EGG",
    "TWISTING_VINES",
    "VAULT",
    "VERDANT_FROGLIGHT",
    "VEX_ARMOR_TRIM_SMITHING_TEMPLATE",
    "VEX_SPAWN_EGG",
    "VILLAGER_SPAWN_EGG",
    "VINDICATOR_SPAWN_EGG",
    "VINE",
    "WANDERING_TRADER_SPAWN_EGG",
    "WARDEN_SPAWN_EGG",
    "WARD_ARMOR_TRIM_SMITHING_TEMPLATE",
    "WARPED_BUTTON",
    "WARPED_DOOR",
    "WARPED_FENCE",
    "WARPED_FENCE_GATE",
    "WARPED_FUNGUS",
    "WARPED_FUNGUS_ON_A_STICK",
    "WARPED_HANGING_SIGN",
    "WARPED_HYPHAE",
    "WARPED_NYLIUM",
    "WARPED_PLANKS",
    "WARPED_PRESSURE_PLATE",
    "WARPED_ROOTS",
    "WARPED_SIGN",
    "WARPED_SLAB",
    "WARPED_STAIRS",
    "WARPED_STEM",
    "WARPED_TRAPDOOR",
    "WARPED_WART_BLOCK",
    "WATER_BUCKET",
    "WAXED_CHISELED_COPPER",
    "WAXED_COPPER_BLOCK",
    "WAXED_COPPER_BULB",
    "WAXED_COPPER_DOOR",
    "WAXED_COPPER_GRATE",
    "WAXED_COPPER_TRAPDOOR",
    "WAXED_CUT_COPPER",
    "WAXED_CUT_COPPER_SLAB",
    "WAXED_CUT_COPPER_STAIRS",
    "WAXED_EXPOSED_CHISELED_COPPER",
    "WAXED_EXPOSED_COPPER",
    "WAXED_EXPOSED_COPPER_BULB",
    "WAXED_EXPOSED_COPPER_DOOR",
    "WAXED_EXPOSED_COPPER_GRATE",
    "WAXED_EXPOSED_COPPER_TRAPDOOR",
    "WAXED_EXPOSED_CUT_COPPER",
    "WAXED_EXPOSED_CUT_COPPER_SLAB",
    "WAXED_EXPOSED_CUT_COPPER_STAIRS",
    "WAXED_OXIDIZED_CHISELED_COPPER",
    "WAXED_OXIDIZED_COPPER",
    "WAXED_OXIDIZED_COPPER_BULB",
    "WAXED_OXIDIZED_COPPER_DOOR",
    "WAXED_OXIDIZED_COPPER_GRATE",
    "WAXED_OXIDIZED_COPPER_TRAPDOOR",
    "WAXED_OXIDIZED_CUT_COPPER",
    "WAXED_OXIDIZED_CUT_COPPER_SLAB",
    "WAXED_OXIDIZED_CUT_COPPER_STAIRS",
    "WAXED_WEATHERED_CHISELED_COPPER",
    "WAXED_WEATHERED_COPPER",
    "WAXED_WEATHERED_COPPER_BULB",
    "WAXED_WEATHERED_COPPER_DOOR",
    "WAXED_WEATHERED_COPPER_GRATE",
    "WAXED_WEATHERED_COPPER_TRAPDOOR",
    "WAXED_WEATHERED_CUT_COPPER",
    "WAXED_WEATHERED_CUT_COPPER_SLAB",
    "WAXED_WEATHERED_CUT_COPPER_STAIRS",
    "WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE",
    "WEATHERED_CHISELED_COPPER",
    "WEATHERED_COPPER",
    "WEATHERED_COPPER_BULB",
    "WEATHERED_COPPER_DOOR",
    "WEATHERED_COPPER_GRATE",
    "WEATHERED_COPPER_TRAPDOOR",
    "WEATHERED_CUT_COPPER",
    "WEATHERED_CUT_COPPER_SLAB",
    "WEATHERED_CUT_COPPER_STAIRS",
    "WEEPING_VINES",
    "WET_SPONGE",
    "WHEAT",
    "WHEAT_SEEDS",
    "WHITE_BANNER",
    "WHITE_BED",
    "WHITE_CANDLE",
    "WHITE_CARPET",
    "WHITE_CONCRETE",
    "WHITE_CONCRETE_POWDER",
    "WHITE_DYE",
    "WHITE_GLAZED_TERRACOTTA",
    "WHITE_SHULKER_BOX",
    "WHITE_STAINED_GLASS",
    "WHITE_STAINED_GLASS_PANE",
    "WHITE_TERRACOTTA",
    "WHITE_TULIP",
    "WHITE_WOOL",
    "WILD_ARMOR_TRIM_SMITHING_TEMPLATE",
    "WITCH_SPAWN_EGG",
    "WITHER_ROSE",
    "WITHER_SKELETON_SKULL",
    "WITHER_SKELETON_SPAWN_EGG",
    "WITHER_SPAWN_EGG",
    "WOLF_ARMOR",
    "WOLF_SPAWN_EGG",
    "WOODEN_AXE",
    "WOODEN_HOE",
    "WOODEN_PICKAXE",
    "WOODEN_SHOVEL",
    "WOODEN_SWORD",
    "WRITABLE_BOOK",
    "WRITTEN_BOOK",
    "YELLOW_BANNER",
    "YELLOW_BED",
    "YELLOW_CANDLE",
    "YELLOW_CARPET",
    "YELLOW_CONCRETE",
    "YELLOW_CONCRETE_POWDER",
    "YELLOW_DYE",
    "YELLOW_GLAZED_TERRACOTTA",
    "YELLOW_SHULKER_BOX",
    "YELLOW_STAINED_GLASS",
    "YELLOW_STAINED_GLASS_PANE",
    "YELLOW_TERRACOTTA",
    "YELLOW_WOOL",
    "ZOGLIN_SPAWN_EGG",
    "ZOMBIE_HEAD",
    "ZOMBIE_HORSE_SPAWN_EGG",
    "ZOMBIE_SPAWN_EGG",
    "ZOMBIE_VILLAGER_SPAWN_EGG",
    "ZOMBIFIED_PIGLIN_SPAWN_EGG",
    "NONE",
    "PLAYER",
    "CIRCLE",
    "CROSS",
    "CURLY_BORDER",
    "DIAGONAL_LEFT",
    "DIAGONAL_RIGHT",
    "DIAGONAL_UP_LEFT",
    "DIAGONAL_UP_RIGHT",
    "FLOWER",
    "GLOBE",
    "GRADIENT",
    "GRADIENT_UP",
    "GUSTER",
    "HALF_HORIZONTAL",
    "HALF_HORIZONTAL_BOTTOM",
    "HALF_VERTICAL",
    "HALF_VERTICAL_RIGHT",
    "MOJANG",
    "RHOMBUS",
    "SKULL",
    "SMALL_STRIPES",
    "SQUARE_BOTTOM_LEFT",
    "SQUARE_BOTTOM_RIGHT",
    "SQUARE_TOP_LEFT",
    "SQUARE_TOP_RIGHT",
    "STRAIGHT_CROSS",
    "STRIPE_BOTTOM",
    "STRIPE_CENTER",
    "STRIPE_DOWNLEFT",
    "STRIPE_DOWNRIGHT",
    "STRIPE_LEFT",
    "STRIPE_MIDDLE",
    "STRIPE_RIGHT",
    "STRIPE_TOP",
    "TRIANGLES_BOTTOM",
    "TRIANGLES_TOP",
    "TRIANGLE_BOTTOM",
    "TRIANGLE_TOP",
    "FREEZING",
    "ALL_BLACK",
    "BRITISH_SHORTHAIR",
    "CALICO",
    "JELLIE",
    "PERSIAN",
    "RAGDOLL",
    "SIAMESE",
    "TABBY",
    "COLD",
    "TEMPERATE",
    "WARM",
    "ARMORER",
    "BUTCHER",
    "CARTOGRAPHER",
    "CLERIC",
    "FARMER",
    "FISHERMAN",
    "FLETCHER",
    "LEATHERWORKER",
    "LIBRARIAN",
    "MASON",
    "NITWIT",
    "SHEPHERD",
    "TOOLSMITH",
    "WEAPONSMITH",
    "CRAFTING",
    "MERCHANT",
    "SMITHING",
    "BANNER_BLACK",
    "BANNER_BLUE",
    "BANNER_BROWN",
    "BANNER_CYAN",
    "BANNER_GRAY",
    "BANNER_GREEN",
    "BANNER_LIGHT_BLUE",
    "BANNER_LIGHT_GRAY",
    "BANNER_LIME",
    "BANNER_MAGENTA",
    "BANNER_ORANGE",
    "BANNER_PINK",
    "BANNER_PURPLE",
    "BANNER_RED",
    "BANNER_WHITE",
    "BANNER_YELLOW",
    "BLUE_MARKER",
    "FRAME",
    "PLAYER_OFF_LIMITS",
    "PLAYER_OFF_MAP",
    "RED_MARKER",
    "RED_X",
    "TARGET_POINT",
    "TARGET_X"
  ]
}